//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace SoonZik
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace SoonZik.SoonZik_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[108];
            _typeNameTable[0] = "SoonZik.ViewModel.ViewModelLocator";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "SoonZik.ViewModel.MainViewModel";
            _typeNameTable[3] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[4] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[5] = "SoonZik.ViewModel.ConnexionViewModel";
            _typeNameTable[6] = "SoonZik.ViewModel.NewsViewModel";
            _typeNameTable[7] = "SoonZik.ViewModel.PackViewModel";
            _typeNameTable[8] = "SoonZik.ViewModel.ProfilUserViewModel";
            _typeNameTable[9] = "SoonZik.ViewModel.ProfilArtisteViewModel";
            _typeNameTable[10] = "SoonZik.ViewModel.BattleViewModel";
            _typeNameTable[11] = "SoonZik.ViewModel.FriendViewModel";
            _typeNameTable[12] = "SoonZik.ViewModel.ConversationViewModel";
            _typeNameTable[13] = "SoonZik.ViewModel.MainPageViewModel";
            _typeNameTable[14] = "SoonZik.ViewModel.ExplorerViewModel";
            _typeNameTable[15] = "SoonZik.ViewModel.NewsDetailViewModel";
            _typeNameTable[16] = "SoonZik.ViewModel.ProfilFriendViewModel";
            _typeNameTable[17] = "SoonZik.ViewModel.AlbumViewModel";
            _typeNameTable[18] = "SoonZik.Views.GeolocalisationView";
            _typeNameTable[19] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[20] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[21] = "SoonZik.ViewModel.PlaylistViewModel";
            _typeNameTable[22] = "SoonZik.ViewModel.InscriptionViewModel";
            _typeNameTable[23] = "Boolean";
            _typeNameTable[24] = "System.Windows.Input.ICommand";
            _typeNameTable[25] = "String";
            _typeNameTable[26] = "GalaSoft.MvvmLight.Command.RelayCommand";
            _typeNameTable[27] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.News>";
            _typeNameTable[28] = "System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.News>";
            _typeNameTable[29] = "SoonZik.HttpRequest.Poco.News";
            _typeNameTable[30] = "Int32";
            _typeNameTable[31] = "SoonZik.HttpRequest.Poco.User";
            _typeNameTable[32] = "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Newstext>";
            _typeNameTable[33] = "SoonZik.HttpRequest.Poco.Newstext";
            _typeNameTable[34] = "System.Collections.Generic.List`1<Object>";
            _typeNameTable[35] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Genre>";
            _typeNameTable[36] = "System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Genre>";
            _typeNameTable[37] = "SoonZik.HttpRequest.Poco.Genre";
            _typeNameTable[38] = "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Influence>";
            _typeNameTable[39] = "SoonZik.HttpRequest.Poco.Influence";
            _typeNameTable[40] = "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Music>";
            _typeNameTable[41] = "SoonZik.HttpRequest.Poco.Music";
            _typeNameTable[42] = "Double";
            _typeNameTable[43] = "SoonZik.HttpRequest.Poco.Album";
            _typeNameTable[44] = "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Genre>";
            _typeNameTable[45] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Music>";
            _typeNameTable[46] = "System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Music>";
            _typeNameTable[47] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.User>";
            _typeNameTable[48] = "System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.User>";
            _typeNameTable[49] = "SoonZik.HttpRequest.Poco.Address";
            _typeNameTable[50] = "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>";
            _typeNameTable[51] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.ViewModel.Data>";
            _typeNameTable[52] = "System.Collections.ObjectModel.Collection`1<SoonZik.ViewModel.Data>";
            _typeNameTable[53] = "SoonZik.ViewModel.Data";
            _typeNameTable[54] = "Windows.UI.Xaml.Media.Imaging.BitmapImage";
            _typeNameTable[55] = "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Album>";
            _typeNameTable[56] = "System.Collections.Generic.List`1<SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>>";
            _typeNameTable[57] = "SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>";
            _typeNameTable[58] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Album>";
            _typeNameTable[59] = "System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Album>";
            _typeNameTable[60] = "System.DateTimeOffset";
            _typeNameTable[61] = "System.ValueType";
            _typeNameTable[62] = "SoonZik.ViewModel.GeolocalisationViewModel";
            _typeNameTable[63] = "Windows.Devices.Geolocation.Geocoordinate";
            _typeNameTable[64] = "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Playlist>";
            _typeNameTable[65] = "System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Playlist>";
            _typeNameTable[66] = "SoonZik.HttpRequest.Poco.Playlist";
            _typeNameTable[67] = "SoonZik.Controls.ButtonFriendPopUp";
            _typeNameTable[68] = "SoonZik.Controls.Genre";
            _typeNameTable[69] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[70] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[71] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[72] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[73] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[74] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[75] = "Microsoft.Xaml.Interactions.Media.ControlStoryboardAction";
            _typeNameTable[76] = "Windows.UI.Xaml.Media.Animation.Storyboard";
            _typeNameTable[77] = "Microsoft.Xaml.Interactions.Media.ControlStoryboardOption";
            _typeNameTable[78] = "System.Enum";
            _typeNameTable[79] = "SoonZik.Controls.GlobalMenuControl";
            _typeNameTable[80] = "SoonZik.HttpRequest.Poco.SearchResult";
            _typeNameTable[81] = "SoonZik.HttpRequest.Poco.Pack";
            _typeNameTable[82] = "SoonZik.Utils.BouttonMenu";
            _typeNameTable[83] = "System.Collections.Generic.List`1<SoonZik.Utils.BouttonMenu>";
            _typeNameTable[84] = "SoonZik.Controls.NewsSharePopup";
            _typeNameTable[85] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[86] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[87] = "SoonZik.Controls.PlayerControl";
            _typeNameTable[88] = "SoonZik.Controls.ProgressRingControl";
            _typeNameTable[89] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[90] = "SoonZik.Views.Connexion";
            _typeNameTable[91] = "SoonZik.MainPage";
            _typeNameTable[92] = "SoonZik.Views.AlbumView";
            _typeNameTable[93] = "SoonZik.Views.InscriptionView";
            _typeNameTable[94] = "SoonZik.ViewModel.ProfilFriendView";
            _typeNameTable[95] = "SoonZik.Views.BattleView";
            _typeNameTable[96] = "SoonZik.Utils.BooleanToVisibilityConverter";
            _typeNameTable[97] = "SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>";
            _typeNameTable[98] = "SoonZik.Views.Conversation";
            _typeNameTable[99] = "SoonZik.Views.Explorer";
            _typeNameTable[100] = "SoonZik.Views.Friends";
            _typeNameTable[101] = "SoonZik.Views.MainView";
            _typeNameTable[102] = "SoonZik.Views.News";
            _typeNameTable[103] = "SoonZik.Views.NewsDetail";
            _typeNameTable[104] = "SoonZik.Views.Packs";
            _typeNameTable[105] = "SoonZik.Views.Playlist";
            _typeNameTable[106] = "SoonZik.Views.ProfilArtiste";
            _typeNameTable[107] = "SoonZik.Views.ProfilUser";

            _typeTable = new global::System.Type[108];
            _typeTable[0] = typeof(global::SoonZik.ViewModel.ViewModelLocator);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::SoonZik.ViewModel.MainViewModel);
            _typeTable[3] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[4] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[5] = typeof(global::SoonZik.ViewModel.ConnexionViewModel);
            _typeTable[6] = typeof(global::SoonZik.ViewModel.NewsViewModel);
            _typeTable[7] = typeof(global::SoonZik.ViewModel.PackViewModel);
            _typeTable[8] = typeof(global::SoonZik.ViewModel.ProfilUserViewModel);
            _typeTable[9] = typeof(global::SoonZik.ViewModel.ProfilArtisteViewModel);
            _typeTable[10] = typeof(global::SoonZik.ViewModel.BattleViewModel);
            _typeTable[11] = typeof(global::SoonZik.ViewModel.FriendViewModel);
            _typeTable[12] = typeof(global::SoonZik.ViewModel.ConversationViewModel);
            _typeTable[13] = typeof(global::SoonZik.ViewModel.MainPageViewModel);
            _typeTable[14] = typeof(global::SoonZik.ViewModel.ExplorerViewModel);
            _typeTable[15] = typeof(global::SoonZik.ViewModel.NewsDetailViewModel);
            _typeTable[16] = typeof(global::SoonZik.ViewModel.ProfilFriendViewModel);
            _typeTable[17] = typeof(global::SoonZik.ViewModel.AlbumViewModel);
            _typeTable[18] = typeof(global::SoonZik.Views.GeolocalisationView);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[21] = typeof(global::SoonZik.ViewModel.PlaylistViewModel);
            _typeTable[22] = typeof(global::SoonZik.ViewModel.InscriptionViewModel);
            _typeTable[23] = typeof(global::System.Boolean);
            _typeTable[24] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[25] = typeof(global::System.String);
            _typeTable[26] = typeof(global::GalaSoft.MvvmLight.Command.RelayCommand);
            _typeTable[27] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.News>);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.News>);
            _typeTable[29] = typeof(global::SoonZik.HttpRequest.Poco.News);
            _typeTable[30] = typeof(global::System.Int32);
            _typeTable[31] = typeof(global::SoonZik.HttpRequest.Poco.User);
            _typeTable[32] = typeof(global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Newstext>);
            _typeTable[33] = typeof(global::SoonZik.HttpRequest.Poco.Newstext);
            _typeTable[34] = typeof(global::System.Collections.Generic.List<global::System.Object>);
            _typeTable[35] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Genre>);
            _typeTable[36] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Genre>);
            _typeTable[37] = typeof(global::SoonZik.HttpRequest.Poco.Genre);
            _typeTable[38] = typeof(global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Influence>);
            _typeTable[39] = typeof(global::SoonZik.HttpRequest.Poco.Influence);
            _typeTable[40] = typeof(global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Music>);
            _typeTable[41] = typeof(global::SoonZik.HttpRequest.Poco.Music);
            _typeTable[42] = typeof(global::System.Double);
            _typeTable[43] = typeof(global::SoonZik.HttpRequest.Poco.Album);
            _typeTable[44] = typeof(global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Genre>);
            _typeTable[45] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Music>);
            _typeTable[46] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Music>);
            _typeTable[47] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.User>);
            _typeTable[48] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.User>);
            _typeTable[49] = typeof(global::SoonZik.HttpRequest.Poco.Address);
            _typeTable[50] = typeof(global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.User>);
            _typeTable[51] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.ViewModel.Data>);
            _typeTable[52] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.ViewModel.Data>);
            _typeTable[53] = typeof(global::SoonZik.ViewModel.Data);
            _typeTable[54] = typeof(global::Windows.UI.Xaml.Media.Imaging.BitmapImage);
            _typeTable[55] = typeof(global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Album>);
            _typeTable[56] = typeof(global::System.Collections.Generic.List<SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>>);
            _typeTable[57] = typeof(global::SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>);
            _typeTable[58] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Album>);
            _typeTable[59] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Album>);
            _typeTable[60] = typeof(global::System.DateTimeOffset);
            _typeTable[61] = typeof(global::System.ValueType);
            _typeTable[62] = typeof(global::SoonZik.ViewModel.GeolocalisationViewModel);
            _typeTable[63] = typeof(global::Windows.Devices.Geolocation.Geocoordinate);
            _typeTable[64] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Playlist>);
            _typeTable[65] = typeof(global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Playlist>);
            _typeTable[66] = typeof(global::SoonZik.HttpRequest.Poco.Playlist);
            _typeTable[67] = typeof(global::SoonZik.Controls.ButtonFriendPopUp);
            _typeTable[68] = typeof(global::SoonZik.Controls.Genre);
            _typeTable[69] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[70] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[71] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[72] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[73] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[74] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[75] = typeof(global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction);
            _typeTable[76] = typeof(global::Windows.UI.Xaml.Media.Animation.Storyboard);
            _typeTable[77] = typeof(global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption);
            _typeTable[78] = typeof(global::System.Enum);
            _typeTable[79] = typeof(global::SoonZik.Controls.GlobalMenuControl);
            _typeTable[80] = typeof(global::SoonZik.HttpRequest.Poco.SearchResult);
            _typeTable[81] = typeof(global::SoonZik.HttpRequest.Poco.Pack);
            _typeTable[82] = typeof(global::SoonZik.Utils.BouttonMenu);
            _typeTable[83] = typeof(global::System.Collections.Generic.List<global::SoonZik.Utils.BouttonMenu>);
            _typeTable[84] = typeof(global::SoonZik.Controls.NewsSharePopup);
            _typeTable[85] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[86] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[87] = typeof(global::SoonZik.Controls.PlayerControl);
            _typeTable[88] = typeof(global::SoonZik.Controls.ProgressRingControl);
            _typeTable[89] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[90] = typeof(global::SoonZik.Views.Connexion);
            _typeTable[91] = typeof(global::SoonZik.MainPage);
            _typeTable[92] = typeof(global::SoonZik.Views.AlbumView);
            _typeTable[93] = typeof(global::SoonZik.Views.InscriptionView);
            _typeTable[94] = typeof(global::SoonZik.ViewModel.ProfilFriendView);
            _typeTable[95] = typeof(global::SoonZik.Views.BattleView);
            _typeTable[96] = typeof(global::SoonZik.Utils.BooleanToVisibilityConverter);
            _typeTable[97] = typeof(global::SoonZik.Utils.BooleanConverter<global::Windows.UI.Xaml.Visibility>);
            _typeTable[98] = typeof(global::SoonZik.Views.Conversation);
            _typeTable[99] = typeof(global::SoonZik.Views.Explorer);
            _typeTable[100] = typeof(global::SoonZik.Views.Friends);
            _typeTable[101] = typeof(global::SoonZik.Views.MainView);
            _typeTable[102] = typeof(global::SoonZik.Views.News);
            _typeTable[103] = typeof(global::SoonZik.Views.NewsDetail);
            _typeTable[104] = typeof(global::SoonZik.Views.Packs);
            _typeTable[105] = typeof(global::SoonZik.Views.Playlist);
            _typeTable[106] = typeof(global::SoonZik.Views.ProfilArtiste);
            _typeTable[107] = typeof(global::SoonZik.Views.ProfilUser);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ViewModelLocator() { return new global::SoonZik.ViewModel.ViewModelLocator(); }
        private object Activate_2_MainViewModel() { return new global::SoonZik.ViewModel.MainViewModel(); }
        private object Activate_4_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_5_ConnexionViewModel() { return new global::SoonZik.ViewModel.ConnexionViewModel(); }
        private object Activate_6_NewsViewModel() { return new global::SoonZik.ViewModel.NewsViewModel(); }
        private object Activate_7_PackViewModel() { return new global::SoonZik.ViewModel.PackViewModel(); }
        private object Activate_8_ProfilUserViewModel() { return new global::SoonZik.ViewModel.ProfilUserViewModel(); }
        private object Activate_9_ProfilArtisteViewModel() { return new global::SoonZik.ViewModel.ProfilArtisteViewModel(); }
        private object Activate_10_BattleViewModel() { return new global::SoonZik.ViewModel.BattleViewModel(); }
        private object Activate_11_FriendViewModel() { return new global::SoonZik.ViewModel.FriendViewModel(); }
        private object Activate_12_ConversationViewModel() { return new global::SoonZik.ViewModel.ConversationViewModel(); }
        private object Activate_13_MainPageViewModel() { return new global::SoonZik.ViewModel.MainPageViewModel(); }
        private object Activate_14_ExplorerViewModel() { return new global::SoonZik.ViewModel.ExplorerViewModel(); }
        private object Activate_15_NewsDetailViewModel() { return new global::SoonZik.ViewModel.NewsDetailViewModel(); }
        private object Activate_16_ProfilFriendViewModel() { return new global::SoonZik.ViewModel.ProfilFriendViewModel(); }
        private object Activate_17_AlbumViewModel() { return new global::SoonZik.ViewModel.AlbumViewModel(); }
        private object Activate_18_GeolocalisationView() { return new global::SoonZik.Views.GeolocalisationView(); }
        private object Activate_21_PlaylistViewModel() { return new global::SoonZik.ViewModel.PlaylistViewModel(); }
        private object Activate_22_InscriptionViewModel() { return new global::SoonZik.ViewModel.InscriptionViewModel(); }
        private object Activate_27_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.News>(); }
        private object Activate_28_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.News>(); }
        private object Activate_29_News() { return new global::SoonZik.HttpRequest.Poco.News(); }
        private object Activate_31_User() { return new global::SoonZik.HttpRequest.Poco.User(); }
        private object Activate_32_List() { return new global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Newstext>(); }
        private object Activate_33_Newstext() { return new global::SoonZik.HttpRequest.Poco.Newstext(); }
        private object Activate_34_List() { return new global::System.Collections.Generic.List<global::System.Object>(); }
        private object Activate_35_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Genre>(); }
        private object Activate_36_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Genre>(); }
        private object Activate_37_Genre() { return new global::SoonZik.HttpRequest.Poco.Genre(); }
        private object Activate_38_List() { return new global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Influence>(); }
        private object Activate_39_Influence() { return new global::SoonZik.HttpRequest.Poco.Influence(); }
        private object Activate_40_List() { return new global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Music>(); }
        private object Activate_41_Music() { return new global::SoonZik.HttpRequest.Poco.Music(); }
        private object Activate_43_Album() { return new global::SoonZik.HttpRequest.Poco.Album(); }
        private object Activate_44_List() { return new global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Genre>(); }
        private object Activate_45_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Music>(); }
        private object Activate_46_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Music>(); }
        private object Activate_47_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.User>(); }
        private object Activate_48_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.User>(); }
        private object Activate_49_Address() { return new global::SoonZik.HttpRequest.Poco.Address(); }
        private object Activate_50_List() { return new global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.User>(); }
        private object Activate_51_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.ViewModel.Data>(); }
        private object Activate_52_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.ViewModel.Data>(); }
        private object Activate_53_Data() { return new global::SoonZik.ViewModel.Data(); }
        private object Activate_55_List() { return new global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Album>(); }
        private object Activate_56_List() { return new global::System.Collections.Generic.List<SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>>(); }
        private object Activate_58_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Album>(); }
        private object Activate_59_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Album>(); }
        private object Activate_62_GeolocalisationViewModel() { return new global::SoonZik.ViewModel.GeolocalisationViewModel(); }
        private object Activate_64_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Playlist>(); }
        private object Activate_65_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoonZik.HttpRequest.Poco.Playlist>(); }
        private object Activate_66_Playlist() { return new global::SoonZik.HttpRequest.Poco.Playlist(); }
        private object Activate_68_Genre() { return new global::SoonZik.Controls.Genre(); }
        private object Activate_70_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_73_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_74_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_75_ControlStoryboardAction() { return new global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction(); }
        private object Activate_79_GlobalMenuControl() { return new global::SoonZik.Controls.GlobalMenuControl(); }
        private object Activate_80_SearchResult() { return new global::SoonZik.HttpRequest.Poco.SearchResult(); }
        private object Activate_81_Pack() { return new global::SoonZik.HttpRequest.Poco.Pack(); }
        private object Activate_82_BouttonMenu() { return new global::SoonZik.Utils.BouttonMenu(); }
        private object Activate_83_List() { return new global::System.Collections.Generic.List<global::SoonZik.Utils.BouttonMenu>(); }
        private object Activate_85_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_87_PlayerControl() { return new global::SoonZik.Controls.PlayerControl(); }
        private object Activate_88_ProgressRingControl() { return new global::SoonZik.Controls.ProgressRingControl(); }
        private object Activate_90_Connexion() { return new global::SoonZik.Views.Connexion(); }
        private object Activate_91_MainPage() { return new global::SoonZik.MainPage(); }
        private object Activate_92_AlbumView() { return new global::SoonZik.Views.AlbumView(); }
        private object Activate_93_InscriptionView() { return new global::SoonZik.Views.InscriptionView(); }
        private object Activate_94_ProfilFriendView() { return new global::SoonZik.ViewModel.ProfilFriendView(); }
        private object Activate_95_BattleView() { return new global::SoonZik.Views.BattleView(); }
        private object Activate_96_BooleanToVisibilityConverter() { return new global::SoonZik.Utils.BooleanToVisibilityConverter(); }
        private object Activate_98_Conversation() { return new global::SoonZik.Views.Conversation(); }
        private object Activate_99_Explorer() { return new global::SoonZik.Views.Explorer(); }
        private object Activate_100_Friends() { return new global::SoonZik.Views.Friends(); }
        private object Activate_101_MainView() { return new global::SoonZik.Views.MainView(); }
        private object Activate_102_News() { return new global::SoonZik.Views.News(); }
        private object Activate_103_NewsDetail() { return new global::SoonZik.Views.NewsDetail(); }
        private object Activate_104_Packs() { return new global::SoonZik.Views.Packs(); }
        private object Activate_105_Playlist() { return new global::SoonZik.Views.Playlist(); }
        private object Activate_106_ProfilArtiste() { return new global::SoonZik.Views.ProfilArtiste(); }
        private object Activate_107_ProfilUser() { return new global::SoonZik.Views.ProfilUser(); }
        private void VectorAdd_27_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.News>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.News)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.News>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.News)item;
            collection.Add(newItem);
        }
        private void VectorAdd_32_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Newstext>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Newstext)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Genre>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Genre)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Genre>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Genre)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Influence>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Influence)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Music>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Music)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Genre>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Genre)item;
            collection.Add(newItem);
        }
        private void VectorAdd_45_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Music>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Music)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Music>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Music)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.User>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.User)item;
            collection.Add(newItem);
        }
        private void VectorAdd_48_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.User>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.User)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.User>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.User)item;
            collection.Add(newItem);
        }
        private void VectorAdd_51_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.ViewModel.Data>)instance;
            var newItem = (global::SoonZik.ViewModel.Data)item;
            collection.Add(newItem);
        }
        private void VectorAdd_52_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.ViewModel.Data>)instance;
            var newItem = (global::SoonZik.ViewModel.Data)item;
            collection.Add(newItem);
        }
        private void VectorAdd_55_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Album>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Album)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>>)instance;
            var newItem = (global::SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_AlphaKeyGroups(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.User>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.User)item;
            collection.Add(newItem);
        }
        private void VectorAdd_58_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Album>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Album)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Album>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Album)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Playlist>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Playlist)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.HttpRequest.Poco.Playlist>)instance;
            var newItem = (global::SoonZik.HttpRequest.Poco.Playlist)item;
            collection.Add(newItem);
        }
        private void VectorAdd_70_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_74_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_83_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoonZik.Utils.BouttonMenu>)instance;
            var newItem = (global::SoonZik.Utils.BouttonMenu)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  SoonZik.ViewModel.ViewModelLocator
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ViewModelLocator;
                userType.AddMemberName("Main");
                userType.AddMemberName("Connexion");
                userType.AddMemberName("News");
                userType.AddMemberName("Pack");
                userType.AddMemberName("ProfilUser");
                userType.AddMemberName("ProfilArtiste");
                userType.AddMemberName("Battle");
                userType.AddMemberName("Friend");
                userType.AddMemberName("Conversation");
                userType.AddMemberName("MainPage");
                userType.AddMemberName("Explorer");
                userType.AddMemberName("NewsDetail");
                userType.AddMemberName("ProfilFriend");
                userType.AddMemberName("AlbumView");
                userType.AddMemberName("GeolocView");
                userType.AddMemberName("PlaylistView");
                userType.AddMemberName("InscriptionView");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  SoonZik.ViewModel.MainViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_2_MainViewModel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                userType.AddMemberName("IsInDesignMode");
                xamlType = userType;
                break;

            case 4:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_ObservableObject;
                xamlType = userType;
                break;

            case 5:   //  SoonZik.ViewModel.ConnexionViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_5_ConnexionViewModel;
                userType.AddMemberName("SelectionCommand");
                userType.AddMemberName("ProgressOn");
                userType.AddMemberName("Username");
                userType.AddMemberName("Password");
                userType.AddMemberName("ConnexionCommand");
                userType.AddMemberName("InscritpiomCommand");
                userType.AddMemberName("FacebookTapped");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  SoonZik.ViewModel.NewsViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_6_NewsViewModel;
                userType.AddMemberName("ListNews");
                userType.AddMemberName("ShareTapped");
                userType.AddMemberName("SelectedNews");
                userType.AddMemberName("ItemClickCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  SoonZik.ViewModel.PackViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_7_PackViewModel;
                userType.AddMemberName("Datas");
                userType.AddMemberName("SelectedData");
                userType.AddMemberName("SelectedAlbum");
                userType.AddMemberName("ListAlbums");
                userType.AddMemberName("SelectionCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  SoonZik.ViewModel.ProfilUserViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_8_ProfilUserViewModel;
                userType.AddMemberName("CurrentUser");
                userType.AddMemberName("SelectUser");
                userType.AddMemberName("FollowerCommand");
                userType.AddMemberName("SelectionCommand");
                userType.AddMemberName("EditClickCommand");
                userType.AddMemberName("CanUpdate");
                userType.AddMemberName("ButtonContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  SoonZik.ViewModel.ProfilArtisteViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_9_ProfilArtisteViewModel;
                userType.AddMemberName("FollowCommand");
                userType.AddMemberName("TheArtiste");
                userType.AddMemberName("FollowText");
                userType.AddMemberName("ListAlbums");
                userType.AddMemberName("SelectionCommand");
                userType.AddMemberName("ItemClickCommand");
                userType.AddMemberName("TheAlbum");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  SoonZik.ViewModel.BattleViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_BattleViewModel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  SoonZik.ViewModel.FriendViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_11_FriendViewModel;
                userType.AddMemberName("Sources");
                userType.AddMemberName("ItemSource");
                userType.AddMemberName("TappedCommand");
                userType.AddMemberName("SelectedUser");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  SoonZik.ViewModel.ConversationViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  SoonZik.ViewModel.MainPageViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_13_MainPageViewModel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  SoonZik.ViewModel.ExplorerViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_14_ExplorerViewModel;
                userType.AddMemberName("ListGenres");
                userType.AddMemberName("ListMusique");
                userType.AddMemberName("ListArtiste");
                userType.AddMemberName("SelectedMusic");
                userType.AddMemberName("MusiCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  SoonZik.ViewModel.NewsDetailViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_15_NewsDetailViewModel;
                userType.AddMemberName("SelectNews");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  SoonZik.ViewModel.ProfilFriendViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_16_ProfilFriendViewModel;
                userType.AddMemberName("CurrentUser");
                userType.AddMemberName("SelectUser");
                userType.AddMemberName("SelectionCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  SoonZik.ViewModel.AlbumViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_17_AlbumViewModel;
                userType.AddMemberName("ImageAlbum");
                userType.AddMemberName("ListMusics");
                userType.AddMemberName("TheAlbum");
                userType.AddMemberName("ItemClickCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  SoonZik.Views.GeolocalisationView
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_18_GeolocalisationView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  SoonZik.ViewModel.PlaylistViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_21_PlaylistViewModel;
                userType.AddMemberName("ListAlbum");
                userType.AddMemberName("ListMusique");
                userType.AddMemberName("ListPlaylist");
                userType.AddMemberName("SelectedMusic");
                userType.AddMemberName("SelectedAlbum");
                userType.AddMemberName("SelectedPlaylist");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  SoonZik.ViewModel.InscriptionViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_22_InscriptionViewModel;
                userType.AddMemberName("Password");
                userType.AddMemberName("Birthday");
                userType.AddMemberName("ValidateCommand");
                userType.AddMemberName("NewUser");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  Boolean
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  System.Windows.Input.ICommand
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  String
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  GalaSoft.MvvmLight.Command.RelayCommand
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.News>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.News>"));
                userType.CollectionAdd = VectorAdd_27_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.News>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_28_Collection;
                userType.CollectionAdd = VectorAdd_28_Collection;
                xamlType = userType;
                break;

            case 29:   //  SoonZik.HttpRequest.Poco.News
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_News;
                userType.AddMemberName("Id");
                userType.AddMemberName("Title");
                userType.AddMemberName("Date");
                userType.AddMemberName("AuthorId");
                userType.AddMemberName("CreatedAt");
                userType.AddMemberName("UpdatedAt");
                userType.AddMemberName("NewsType");
                userType.AddMemberName("User");
                userType.AddMemberName("Newstexts");
                userType.AddMemberName("Attachments");
                userType.AddMemberName("Tags");
                xamlType = userType;
                break;

            case 30:   //  Int32
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  SoonZik.HttpRequest.Poco.User
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_31_User;
                userType.AddMemberName("id");
                userType.AddMemberName("email");
                userType.AddMemberName("salt");
                userType.AddMemberName("fname");
                userType.AddMemberName("lname");
                userType.AddMemberName("username");
                userType.AddMemberName("birthday");
                userType.AddMemberName("image");
                userType.AddMemberName("description");
                userType.AddMemberName("phoneNumber");
                userType.AddMemberName("facebook");
                userType.AddMemberName("twitter");
                userType.AddMemberName("googlePlus");
                userType.AddMemberName("newsletter");
                userType.AddMemberName("language");
                userType.AddMemberName("created_at");
                userType.AddMemberName("address");
                userType.AddMemberName("friends");
                userType.AddMemberName("follows");
                xamlType = userType;
                break;

            case 32:   //  System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Newstext>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_32_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  SoonZik.HttpRequest.Poco.Newstext
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_Newstext;
                userType.AddMemberName("id");
                userType.AddMemberName("content");
                userType.AddMemberName("title");
                userType.AddMemberName("language");
                xamlType = userType;
                break;

            case 34:   //  System.Collections.Generic.List`1<Object>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_34_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Genre>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Genre>"));
                userType.CollectionAdd = VectorAdd_35_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Genre>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_36_Collection;
                userType.CollectionAdd = VectorAdd_36_Collection;
                xamlType = userType;
                break;

            case 37:   //  SoonZik.HttpRequest.Poco.Genre
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_Genre;
                userType.AddMemberName("id");
                userType.AddMemberName("style_name");
                userType.AddMemberName("color_name");
                userType.AddMemberName("color_hexa");
                userType.AddMemberName("created_at");
                userType.AddMemberName("updated_at");
                userType.AddMemberName("influences");
                userType.AddMemberName("musics");
                xamlType = userType;
                break;

            case 38:   //  System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Influence>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_38_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 39:   //  SoonZik.HttpRequest.Poco.Influence
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_Influence;
                userType.AddMemberName("id");
                userType.AddMemberName("name");
                userType.AddMemberName("created_at");
                userType.AddMemberName("updated_at");
                xamlType = userType;
                break;

            case 40:   //  System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Music>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_40_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  SoonZik.HttpRequest.Poco.Music
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_41_Music;
                userType.AddMemberName("id");
                userType.AddMemberName("title");
                userType.AddMemberName("duration");
                userType.AddMemberName("price");
                userType.AddMemberName("file");
                userType.AddMemberName("album");
                userType.AddMemberName("genres");
                userType.AddMemberName("user");
                xamlType = userType;
                break;

            case 42:   //  Double
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  SoonZik.HttpRequest.Poco.Album
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_43_Album;
                userType.AddMemberName("id");
                userType.AddMemberName("user_id");
                userType.AddMemberName("title");
                userType.AddMemberName("image");
                userType.AddMemberName("price");
                userType.AddMemberName("file");
                userType.AddMemberName("yearProd");
                userType.AddMemberName("created_at");
                userType.AddMemberName("updated_at");
                userType.AddMemberName("musics");
                userType.AddMemberName("user");
                xamlType = userType;
                break;

            case 44:   //  System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Genre>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_44_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Music>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Music>"));
                userType.CollectionAdd = VectorAdd_45_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Music>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_46_Collection;
                userType.CollectionAdd = VectorAdd_46_Collection;
                xamlType = userType;
                break;

            case 47:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.User>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.User>"));
                userType.CollectionAdd = VectorAdd_47_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.User>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_Collection;
                userType.CollectionAdd = VectorAdd_48_Collection;
                xamlType = userType;
                break;

            case 49:   //  SoonZik.HttpRequest.Poco.Address
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_50_List;
                userType.CollectionAdd = VectorAdd_50_List;
                userType.AddMemberName("Capacity");
                userType.AddMemberName("Count");
                xamlType = userType;
                break;

            case 51:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.ViewModel.Data>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.ViewModel.Data>"));
                userType.CollectionAdd = VectorAdd_51_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 52:   //  System.Collections.ObjectModel.Collection`1<SoonZik.ViewModel.Data>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_52_Collection;
                userType.CollectionAdd = VectorAdd_52_Collection;
                xamlType = userType;
                break;

            case 53:   //  SoonZik.ViewModel.Data
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_53_Data;
                userType.AddMemberName("BitmapImage");
                userType.AddMemberName("Title");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  Windows.UI.Xaml.Media.Imaging.BitmapImage
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Album>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_55_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  System.Collections.Generic.List`1<SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_56_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>"));
                userType.CollectionAdd = VectorAdd_57_AlphaKeyGroups;
                userType.AddMemberName("Key");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Album>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Album>"));
                userType.CollectionAdd = VectorAdd_58_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 59:   //  System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Album>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_59_Collection;
                userType.CollectionAdd = VectorAdd_59_Collection;
                xamlType = userType;
                break;

            case 60:   //  System.DateTimeOffset
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  System.ValueType
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 62:   //  SoonZik.ViewModel.GeolocalisationViewModel
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_62_GeolocalisationViewModel;
                userType.AddMemberName("UserLocation");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  Windows.Devices.Geolocation.Geocoordinate
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Playlist>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Playlist>"));
                userType.CollectionAdd = VectorAdd_64_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  System.Collections.ObjectModel.Collection`1<SoonZik.HttpRequest.Poco.Playlist>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_65_Collection;
                userType.CollectionAdd = VectorAdd_65_Collection;
                xamlType = userType;
                break;

            case 66:   //  SoonZik.HttpRequest.Poco.Playlist
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_66_Playlist;
                xamlType = userType;
                break;

            case 67:   //  SoonZik.Controls.ButtonFriendPopUp
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  SoonZik.Controls.Genre
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_68_Genre;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 69:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 70:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_70_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 72:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 73:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_73_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 74:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_74_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  Microsoft.Xaml.Interactions.Media.ControlStoryboardAction
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_75_ControlStoryboardAction;
                userType.AddMemberName("Storyboard");
                userType.AddMemberName("ControlStoryboardOption");
                xamlType = userType;
                break;

            case 76:   //  Windows.UI.Xaml.Media.Animation.Storyboard
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 77:   //  Microsoft.Xaml.Interactions.Media.ControlStoryboardOption
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Play", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Play);
                userType.AddEnumValue("Stop", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Stop);
                userType.AddEnumValue("TogglePlayPause", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.TogglePlayPause);
                userType.AddEnumValue("Pause", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Pause);
                userType.AddEnumValue("Resume", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Resume);
                userType.AddEnumValue("SkipToFill", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.SkipToFill);
                xamlType = userType;
                break;

            case 78:   //  System.Enum
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 79:   //  SoonZik.Controls.GlobalMenuControl
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_79_GlobalMenuControl;
                userType.AddMemberName("HeaderArtiste");
                userType.AddMemberName("HeaderMusique");
                userType.AddMemberName("HeaderUser");
                userType.AddMemberName("HeaderPack");
                userType.AddMemberName("HeaderAlbum");
                userType.AddMemberName("MyResult");
                userType.AddMemberName("SearchText");
                userType.AddMemberName("SelectedUser");
                userType.AddMemberName("SelectedMusic");
                userType.AddMemberName("SelectedAlbum");
                userType.AddMemberName("SelectedPack");
                userType.AddMemberName("SelectedBouttonMenu");
                userType.AddMemberName("ListBouttonMenus");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 80:   //  SoonZik.HttpRequest.Poco.SearchResult
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 81:   //  SoonZik.HttpRequest.Poco.Pack
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 82:   //  SoonZik.Utils.BouttonMenu
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_82_BouttonMenu;
                userType.AddMemberName("ImageBoutton");
                userType.AddMemberName("Title");
                userType.AddMemberName("PageBoutton");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 83:   //  System.Collections.Generic.List`1<SoonZik.Utils.BouttonMenu>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_83_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  SoonZik.Controls.NewsSharePopup
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_85_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 86:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 87:   //  SoonZik.Controls.PlayerControl
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_87_PlayerControl;
                userType.AddMemberName("ListOfMusics");
                userType.AddMemberName("PlayedMusic");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  SoonZik.Controls.ProgressRingControl
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_88_ProgressRingControl;
                userType.AddMemberName("GridVisibility");
                userType.AddMemberName("isActive");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 90:   //  SoonZik.Views.Connexion
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_90_Connexion;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  SoonZik.MainPage
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_91_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 92:   //  SoonZik.Views.AlbumView
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_92_AlbumView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 93:   //  SoonZik.Views.InscriptionView
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_93_InscriptionView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  SoonZik.ViewModel.ProfilFriendView
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_94_ProfilFriendView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  SoonZik.Views.BattleView
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_95_BattleView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 96:   //  SoonZik.Utils.BooleanToVisibilityConverter
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>"));
                userType.Activator = Activate_96_BooleanToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("True");
                userType.AddMemberName("False");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 98:   //  SoonZik.Views.Conversation
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_98_Conversation;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  SoonZik.Views.Explorer
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_99_Explorer;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 100:   //  SoonZik.Views.Friends
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_100_Friends;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 101:   //  SoonZik.Views.MainView
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_101_MainView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 102:   //  SoonZik.Views.News
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_102_News;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  SoonZik.Views.NewsDetail
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_103_NewsDetail;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 104:   //  SoonZik.Views.Packs
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_104_Packs;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 105:   //  SoonZik.Views.Playlist
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_105_Playlist;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 106:   //  SoonZik.Views.ProfilArtiste
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_106_ProfilArtiste;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 107:   //  SoonZik.Views.ProfilUser
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_107_ProfilUser;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Coding4Fun.Toolkit.Controls.Coding4Fun_Toolkit_Controls__WP81__XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::Facebook.Client.Facebook_Client_Universal_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_ViewModelLocator_Main(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Main;
        }
        private object get_1_ViewModelLocator_Connexion(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Connexion;
        }
        private object get_2_ViewModelLocator_News(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.News;
        }
        private object get_3_ViewModelLocator_Pack(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Pack;
        }
        private object get_4_ViewModelLocator_ProfilUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.ProfilUser;
        }
        private object get_5_ViewModelLocator_ProfilArtiste(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.ProfilArtiste;
        }
        private object get_6_ViewModelLocator_Battle(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Battle;
        }
        private object get_7_ViewModelLocator_Friend(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Friend;
        }
        private object get_8_ViewModelLocator_Conversation(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Conversation;
        }
        private object get_9_ViewModelLocator_MainPage(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.MainPage;
        }
        private object get_10_ViewModelLocator_Explorer(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.Explorer;
        }
        private object get_11_ViewModelLocator_NewsDetail(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.NewsDetail;
        }
        private object get_12_ViewModelLocator_ProfilFriend(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.ProfilFriend;
        }
        private object get_13_ViewModelLocator_AlbumView(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.AlbumView;
        }
        private object get_14_ViewModelLocator_GeolocView(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.GeolocView;
        }
        private object get_15_ViewModelLocator_PlaylistView(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.PlaylistView;
        }
        private object get_16_ViewModelLocator_InscriptionView(object instance)
        {
            var that = (global::SoonZik.ViewModel.ViewModelLocator)instance;
            return that.InscriptionView;
        }
        private object get_17_ViewModelBase_IsInDesignMode(object instance)
        {
            var that = (global::GalaSoft.MvvmLight.ViewModelBase)instance;
            return that.IsInDesignMode;
        }
        private object get_18_ConnexionViewModel_SelectionCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.SelectionCommand;
        }
        private object get_19_ConnexionViewModel_ProgressOn(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.ProgressOn;
        }
        private void set_19_ConnexionViewModel_ProgressOn(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            that.ProgressOn = (global::System.Boolean)Value;
        }
        private object get_20_ConnexionViewModel_Username(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.Username;
        }
        private void set_20_ConnexionViewModel_Username(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            that.Username = (global::System.String)Value;
        }
        private object get_21_ConnexionViewModel_Password(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.Password;
        }
        private void set_21_ConnexionViewModel_Password(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_22_ConnexionViewModel_ConnexionCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.ConnexionCommand;
        }
        private object get_23_ConnexionViewModel_InscritpiomCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.InscritpiomCommand;
        }
        private object get_24_ConnexionViewModel_FacebookTapped(object instance)
        {
            var that = (global::SoonZik.ViewModel.ConnexionViewModel)instance;
            return that.FacebookTapped;
        }
        private object get_25_NewsViewModel_ListNews(object instance)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            return that.ListNews;
        }
        private void set_25_NewsViewModel_ListNews(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            that.ListNews = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.News>)Value;
        }
        private object get_26_News_Id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.Id;
        }
        private void set_26_News_Id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.Id = (global::System.Int32)Value;
        }
        private object get_27_News_Title(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.Title;
        }
        private void set_27_News_Title(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_28_News_Date(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.Date;
        }
        private void set_28_News_Date(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.Date = (global::System.String)Value;
        }
        private object get_29_News_AuthorId(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.AuthorId;
        }
        private void set_29_News_AuthorId(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.AuthorId = (global::System.Int32)Value;
        }
        private object get_30_News_CreatedAt(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.CreatedAt;
        }
        private void set_30_News_CreatedAt(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.CreatedAt = (global::System.String)Value;
        }
        private object get_31_News_UpdatedAt(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.UpdatedAt;
        }
        private void set_31_News_UpdatedAt(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.UpdatedAt = (global::System.String)Value;
        }
        private object get_32_News_NewsType(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.NewsType;
        }
        private void set_32_News_NewsType(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.NewsType = (global::System.String)Value;
        }
        private object get_33_News_User(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.User;
        }
        private void set_33_News_User(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.User = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_34_News_Newstexts(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.Newstexts;
        }
        private void set_34_News_Newstexts(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.Newstexts = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Newstext>)Value;
        }
        private object get_35_Newstext_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            return that.id;
        }
        private void set_35_Newstext_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_36_Newstext_content(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            return that.content;
        }
        private void set_36_Newstext_content(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            that.content = (global::System.String)Value;
        }
        private object get_37_Newstext_title(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            return that.title;
        }
        private void set_37_Newstext_title(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            that.title = (global::System.String)Value;
        }
        private object get_38_Newstext_language(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            return that.language;
        }
        private void set_38_Newstext_language(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Newstext)instance;
            that.language = (global::System.String)Value;
        }
        private object get_39_News_Attachments(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.Attachments;
        }
        private void set_39_News_Attachments(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.Attachments = (global::System.Collections.Generic.List<global::System.Object>)Value;
        }
        private object get_40_News_Tags(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            return that.Tags;
        }
        private void set_40_News_Tags(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.News)instance;
            that.Tags = (global::System.Collections.Generic.List<global::System.Object>)Value;
        }
        private object get_41_NewsViewModel_ShareTapped(object instance)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            return that.ShareTapped;
        }
        private void set_41_NewsViewModel_ShareTapped(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            that.ShareTapped = (global::GalaSoft.MvvmLight.Command.RelayCommand)Value;
        }
        private object get_42_NewsViewModel_SelectedNews(object instance)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            return that.SelectedNews;
        }
        private void set_42_NewsViewModel_SelectedNews(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            that.SelectedNews = (global::SoonZik.HttpRequest.Poco.News)Value;
        }
        private object get_43_NewsViewModel_ItemClickCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            return that.ItemClickCommand;
        }
        private void set_43_NewsViewModel_ItemClickCommand(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.NewsViewModel)instance;
            that.ItemClickCommand = (global::GalaSoft.MvvmLight.Command.RelayCommand)Value;
        }
        private object get_44_ExplorerViewModel_ListGenres(object instance)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            return that.ListGenres;
        }
        private void set_44_ExplorerViewModel_ListGenres(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            that.ListGenres = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Genre>)Value;
        }
        private object get_45_Genre_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.id;
        }
        private void set_45_Genre_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_46_Genre_style_name(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.style_name;
        }
        private void set_46_Genre_style_name(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.style_name = (global::System.String)Value;
        }
        private object get_47_Genre_color_name(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.color_name;
        }
        private void set_47_Genre_color_name(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.color_name = (global::System.String)Value;
        }
        private object get_48_Genre_color_hexa(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.color_hexa;
        }
        private void set_48_Genre_color_hexa(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.color_hexa = (global::System.String)Value;
        }
        private object get_49_Genre_created_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.created_at;
        }
        private void set_49_Genre_created_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_50_Genre_updated_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.updated_at;
        }
        private void set_50_Genre_updated_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.updated_at = (global::System.String)Value;
        }
        private object get_51_Genre_influences(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.influences;
        }
        private void set_51_Genre_influences(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.influences = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Influence>)Value;
        }
        private object get_52_Influence_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            return that.id;
        }
        private void set_52_Influence_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_53_Influence_name(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            return that.name;
        }
        private void set_53_Influence_name(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            that.name = (global::System.String)Value;
        }
        private object get_54_Influence_created_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            return that.created_at;
        }
        private void set_54_Influence_created_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_55_Influence_updated_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            return that.updated_at;
        }
        private void set_55_Influence_updated_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Influence)instance;
            that.updated_at = (global::System.String)Value;
        }
        private object get_56_Genre_musics(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            return that.musics;
        }
        private void set_56_Genre_musics(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Genre)instance;
            that.musics = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Music>)Value;
        }
        private object get_57_Music_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.id;
        }
        private void set_57_Music_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_58_Music_title(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.title;
        }
        private void set_58_Music_title(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.title = (global::System.String)Value;
        }
        private object get_59_Music_duration(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.duration;
        }
        private void set_59_Music_duration(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.duration = (global::System.Int32)Value;
        }
        private object get_60_Music_price(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.price;
        }
        private void set_60_Music_price(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.price = (global::System.Double)Value;
        }
        private object get_61_Music_file(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.file;
        }
        private void set_61_Music_file(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.file = (global::System.String)Value;
        }
        private object get_62_Music_album(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.album;
        }
        private void set_62_Music_album(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.album = (global::SoonZik.HttpRequest.Poco.Album)Value;
        }
        private object get_63_Music_genres(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.genres;
        }
        private void set_63_Music_genres(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.genres = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Genre>)Value;
        }
        private object get_64_Music_user(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            return that.user;
        }
        private void set_64_Music_user(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Music)instance;
            that.user = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_65_ExplorerViewModel_ListMusique(object instance)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            return that.ListMusique;
        }
        private void set_65_ExplorerViewModel_ListMusique(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            that.ListMusique = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Music>)Value;
        }
        private object get_66_ExplorerViewModel_ListArtiste(object instance)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            return that.ListArtiste;
        }
        private void set_66_ExplorerViewModel_ListArtiste(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            that.ListArtiste = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.User>)Value;
        }
        private object get_67_User_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.id;
        }
        private void set_67_User_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_68_User_email(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.email;
        }
        private void set_68_User_email(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.email = (global::System.String)Value;
        }
        private object get_69_User_salt(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.salt;
        }
        private void set_69_User_salt(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.salt = (global::System.String)Value;
        }
        private object get_70_User_fname(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.fname;
        }
        private void set_70_User_fname(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.fname = (global::System.String)Value;
        }
        private object get_71_User_lname(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.lname;
        }
        private void set_71_User_lname(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.lname = (global::System.String)Value;
        }
        private object get_72_User_username(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.username;
        }
        private void set_72_User_username(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.username = (global::System.String)Value;
        }
        private object get_73_User_birthday(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.birthday;
        }
        private void set_73_User_birthday(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.birthday = (global::System.String)Value;
        }
        private object get_74_User_image(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.image;
        }
        private void set_74_User_image(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.image = (global::System.String)Value;
        }
        private object get_75_User_description(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.description;
        }
        private void set_75_User_description(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.description = (global::System.String)Value;
        }
        private object get_76_User_phoneNumber(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.phoneNumber;
        }
        private void set_76_User_phoneNumber(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.phoneNumber = (global::System.String)Value;
        }
        private object get_77_User_facebook(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.facebook;
        }
        private void set_77_User_facebook(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.facebook = (global::System.Object)Value;
        }
        private object get_78_User_twitter(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.twitter;
        }
        private void set_78_User_twitter(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.twitter = (global::System.Object)Value;
        }
        private object get_79_User_googlePlus(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.googlePlus;
        }
        private void set_79_User_googlePlus(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.googlePlus = (global::System.Object)Value;
        }
        private object get_80_User_newsletter(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.newsletter;
        }
        private void set_80_User_newsletter(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.newsletter = (global::System.Boolean)Value;
        }
        private object get_81_User_language(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.language;
        }
        private void set_81_User_language(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.language = (global::System.String)Value;
        }
        private object get_82_User_created_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.created_at;
        }
        private void set_82_User_created_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_83_User_address(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.address;
        }
        private void set_83_User_address(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.address = (global::SoonZik.HttpRequest.Poco.Address)Value;
        }
        private object get_84_User_friends(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.friends;
        }
        private void set_84_User_friends(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.friends = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.User>)Value;
        }
        private object get_85_User_follows(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            return that.follows;
        }
        private void set_85_User_follows(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.User)instance;
            that.follows = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.User>)Value;
        }
        private object get_86_ExplorerViewModel_SelectedMusic(object instance)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            return that.SelectedMusic;
        }
        private void set_86_ExplorerViewModel_SelectedMusic(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            that.SelectedMusic = (global::SoonZik.HttpRequest.Poco.Music)Value;
        }
        private object get_87_ExplorerViewModel_MusiCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            return that.MusiCommand;
        }
        private void set_87_ExplorerViewModel_MusiCommand(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ExplorerViewModel)instance;
            that.MusiCommand = (global::GalaSoft.MvvmLight.Command.RelayCommand)Value;
        }
        private object get_88_ProfilUserViewModel_CurrentUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.CurrentUser;
        }
        private void set_88_ProfilUserViewModel_CurrentUser(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            that.CurrentUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_89_ProfilUserViewModel_SelectUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.SelectUser;
        }
        private void set_89_ProfilUserViewModel_SelectUser(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            that.SelectUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_90_ProfilUserViewModel_FollowerCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.FollowerCommand;
        }
        private object get_91_ProfilUserViewModel_SelectionCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.SelectionCommand;
        }
        private object get_92_ProfilUserViewModel_EditClickCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.EditClickCommand;
        }
        private object get_93_ProfilUserViewModel_CanUpdate(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.CanUpdate;
        }
        private void set_93_ProfilUserViewModel_CanUpdate(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            that.CanUpdate = (global::System.Boolean)Value;
        }
        private object get_94_ProfilUserViewModel_ButtonContent(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            return that.ButtonContent;
        }
        private void set_94_ProfilUserViewModel_ButtonContent(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilUserViewModel)instance;
            that.ButtonContent = (global::System.String)Value;
        }
        private object get_95_ProfilFriendViewModel_CurrentUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilFriendViewModel)instance;
            return that.CurrentUser;
        }
        private void set_95_ProfilFriendViewModel_CurrentUser(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilFriendViewModel)instance;
            that.CurrentUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_96_ProfilFriendViewModel_SelectUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilFriendViewModel)instance;
            return that.SelectUser;
        }
        private void set_96_ProfilFriendViewModel_SelectUser(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilFriendViewModel)instance;
            that.SelectUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_97_ProfilFriendViewModel_SelectionCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilFriendViewModel)instance;
            return that.SelectionCommand;
        }
        private object get_98_PackViewModel_Datas(object instance)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            return that.Datas;
        }
        private void set_98_PackViewModel_Datas(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            that.Datas = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.ViewModel.Data>)Value;
        }
        private object get_99_Data_BitmapImage(object instance)
        {
            var that = (global::SoonZik.ViewModel.Data)instance;
            return that.BitmapImage;
        }
        private void set_99_Data_BitmapImage(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.Data)instance;
            that.BitmapImage = (global::Windows.UI.Xaml.Media.Imaging.BitmapImage)Value;
        }
        private object get_100_Data_Title(object instance)
        {
            var that = (global::SoonZik.ViewModel.Data)instance;
            return that.Title;
        }
        private void set_100_Data_Title(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.Data)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_101_PackViewModel_SelectedData(object instance)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            return that.SelectedData;
        }
        private void set_101_PackViewModel_SelectedData(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            that.SelectedData = (global::SoonZik.ViewModel.Data)Value;
        }
        private object get_102_PackViewModel_SelectedAlbum(object instance)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            return that.SelectedAlbum;
        }
        private void set_102_PackViewModel_SelectedAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            that.SelectedAlbum = (global::SoonZik.HttpRequest.Poco.Album)Value;
        }
        private object get_103_PackViewModel_ListAlbums(object instance)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            return that.ListAlbums;
        }
        private void set_103_PackViewModel_ListAlbums(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            that.ListAlbums = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Album>)Value;
        }
        private object get_104_Album_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.id;
        }
        private void set_104_Album_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_105_Album_user_id(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.user_id;
        }
        private void set_105_Album_user_id(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.user_id = (global::System.Int32)Value;
        }
        private object get_106_Album_title(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.title;
        }
        private void set_106_Album_title(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.title = (global::System.String)Value;
        }
        private object get_107_Album_image(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.image;
        }
        private void set_107_Album_image(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.image = (global::System.String)Value;
        }
        private object get_108_Album_price(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.price;
        }
        private void set_108_Album_price(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.price = (global::System.Double)Value;
        }
        private object get_109_Album_file(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.file;
        }
        private void set_109_Album_file(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.file = (global::System.String)Value;
        }
        private object get_110_Album_yearProd(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.yearProd;
        }
        private void set_110_Album_yearProd(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.yearProd = (global::System.Int32)Value;
        }
        private object get_111_Album_created_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.created_at;
        }
        private void set_111_Album_created_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_112_Album_updated_at(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.updated_at;
        }
        private void set_112_Album_updated_at(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.updated_at = (global::System.String)Value;
        }
        private object get_113_Album_musics(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.musics;
        }
        private void set_113_Album_musics(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.musics = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Music>)Value;
        }
        private object get_114_Album_user(object instance)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            return that.user;
        }
        private void set_114_Album_user(object instance, object Value)
        {
            var that = (global::SoonZik.HttpRequest.Poco.Album)instance;
            that.user = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_115_PackViewModel_SelectionCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.PackViewModel)instance;
            return that.SelectionCommand;
        }
        private object get_116_NewsDetailViewModel_SelectNews(object instance)
        {
            var that = (global::SoonZik.ViewModel.NewsDetailViewModel)instance;
            return that.SelectNews;
        }
        private void set_116_NewsDetailViewModel_SelectNews(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.NewsDetailViewModel)instance;
            that.SelectNews = (global::SoonZik.HttpRequest.Poco.News)Value;
        }
        private object get_117_FriendViewModel_Sources(object instance)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            return that.Sources;
        }
        private void set_117_FriendViewModel_Sources(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            that.Sources = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.User>)Value;
        }
        private object get_118_FriendViewModel_ItemSource(object instance)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            return that.ItemSource;
        }
        private void set_118_FriendViewModel_ItemSource(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            that.ItemSource = (global::System.Collections.Generic.List<SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>>)Value;
        }
        private object get_119_AlphaKeyGroups_Key(object instance)
        {
            var that = (global::SoonZik.Utils.AlphaKeyGroups<global::SoonZik.HttpRequest.Poco.User>)instance;
            return that.Key;
        }
        private object get_120_List_Capacity(object instance)
        {
            var that = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.User>)instance;
            return that.Capacity;
        }
        private void set_120_List_Capacity(object instance, object Value)
        {
            var that = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.User>)instance;
            that.Capacity = (global::System.Int32)Value;
        }
        private object get_121_List_Count(object instance)
        {
            var that = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.User>)instance;
            return that.Count;
        }
        private object get_122_FriendViewModel_TappedCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            return that.TappedCommand;
        }
        private object get_123_FriendViewModel_SelectedUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            return that.SelectedUser;
        }
        private void set_123_FriendViewModel_SelectedUser(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.FriendViewModel)instance;
            that.SelectedUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_124_AlbumViewModel_ImageAlbum(object instance)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            return that.ImageAlbum;
        }
        private void set_124_AlbumViewModel_ImageAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            that.ImageAlbum = (global::System.String)Value;
        }
        private object get_125_AlbumViewModel_ListMusics(object instance)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            return that.ListMusics;
        }
        private void set_125_AlbumViewModel_ListMusics(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            that.ListMusics = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Music>)Value;
        }
        private object get_126_AlbumViewModel_TheAlbum(object instance)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            return that.TheAlbum;
        }
        private void set_126_AlbumViewModel_TheAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            that.TheAlbum = (global::SoonZik.HttpRequest.Poco.Album)Value;
        }
        private object get_127_AlbumViewModel_ItemClickCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            return that.ItemClickCommand;
        }
        private void set_127_AlbumViewModel_ItemClickCommand(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.AlbumViewModel)instance;
            that.ItemClickCommand = (global::GalaSoft.MvvmLight.Command.RelayCommand)Value;
        }
        private object get_128_ProfilArtisteViewModel_FollowCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.FollowCommand;
        }
        private object get_129_ProfilArtisteViewModel_TheArtiste(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.TheArtiste;
        }
        private void set_129_ProfilArtisteViewModel_TheArtiste(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            that.TheArtiste = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_130_ProfilArtisteViewModel_FollowText(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.FollowText;
        }
        private void set_130_ProfilArtisteViewModel_FollowText(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            that.FollowText = (global::System.String)Value;
        }
        private object get_131_ProfilArtisteViewModel_ListAlbums(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.ListAlbums;
        }
        private void set_131_ProfilArtisteViewModel_ListAlbums(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            that.ListAlbums = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Album>)Value;
        }
        private object get_132_ProfilArtisteViewModel_SelectionCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.SelectionCommand;
        }
        private object get_133_ProfilArtisteViewModel_ItemClickCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.ItemClickCommand;
        }
        private void set_133_ProfilArtisteViewModel_ItemClickCommand(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            that.ItemClickCommand = (global::GalaSoft.MvvmLight.Command.RelayCommand)Value;
        }
        private object get_134_ProfilArtisteViewModel_TheAlbum(object instance)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            return that.TheAlbum;
        }
        private void set_134_ProfilArtisteViewModel_TheAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.ProfilArtisteViewModel)instance;
            that.TheAlbum = (global::SoonZik.HttpRequest.Poco.Album)Value;
        }
        private object get_135_InscriptionViewModel_Password(object instance)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            return that.Password;
        }
        private void set_135_InscriptionViewModel_Password(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_136_InscriptionViewModel_Birthday(object instance)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            return that.Birthday;
        }
        private void set_136_InscriptionViewModel_Birthday(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            that.Birthday = (global::System.DateTimeOffset)Value;
        }
        private object get_137_InscriptionViewModel_ValidateCommand(object instance)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            return that.ValidateCommand;
        }
        private object get_138_InscriptionViewModel_NewUser(object instance)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            return that.NewUser;
        }
        private void set_138_InscriptionViewModel_NewUser(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.InscriptionViewModel)instance;
            that.NewUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_139_GeolocalisationViewModel_UserLocation(object instance)
        {
            var that = (global::SoonZik.ViewModel.GeolocalisationViewModel)instance;
            return that.UserLocation;
        }
        private void set_139_GeolocalisationViewModel_UserLocation(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.GeolocalisationViewModel)instance;
            that.UserLocation = (global::Windows.Devices.Geolocation.Geocoordinate)Value;
        }
        private object get_140_PlaylistViewModel_ListAlbum(object instance)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            return that.ListAlbum;
        }
        private void set_140_PlaylistViewModel_ListAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            that.ListAlbum = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Album>)Value;
        }
        private object get_141_PlaylistViewModel_ListMusique(object instance)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            return that.ListMusique;
        }
        private void set_141_PlaylistViewModel_ListMusique(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            that.ListMusique = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Music>)Value;
        }
        private object get_142_PlaylistViewModel_ListPlaylist(object instance)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            return that.ListPlaylist;
        }
        private void set_142_PlaylistViewModel_ListPlaylist(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            that.ListPlaylist = (global::System.Collections.ObjectModel.ObservableCollection<global::SoonZik.HttpRequest.Poco.Playlist>)Value;
        }
        private object get_143_PlaylistViewModel_SelectedMusic(object instance)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            return that.SelectedMusic;
        }
        private void set_143_PlaylistViewModel_SelectedMusic(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            that.SelectedMusic = (global::SoonZik.HttpRequest.Poco.Music)Value;
        }
        private object get_144_PlaylistViewModel_SelectedAlbum(object instance)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            return that.SelectedAlbum;
        }
        private void set_144_PlaylistViewModel_SelectedAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            that.SelectedAlbum = (global::SoonZik.HttpRequest.Poco.Album)Value;
        }
        private object get_145_PlaylistViewModel_SelectedPlaylist(object instance)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            return that.SelectedPlaylist;
        }
        private void set_145_PlaylistViewModel_SelectedPlaylist(object instance, object Value)
        {
            var that = (global::SoonZik.ViewModel.PlaylistViewModel)instance;
            that.SelectedPlaylist = (global::SoonZik.HttpRequest.Poco.Playlist)Value;
        }
        private object get_146_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_146_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_147_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_148_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_148_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_149_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_149_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_150_EventTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_151_ControlStoryboardAction_Storyboard(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            return that.Storyboard;
        }
        private void set_151_ControlStoryboardAction_Storyboard(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            that.Storyboard = (global::Windows.UI.Xaml.Media.Animation.Storyboard)Value;
        }
        private object get_152_ControlStoryboardAction_ControlStoryboardOption(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            return that.ControlStoryboardOption;
        }
        private void set_152_ControlStoryboardAction_ControlStoryboardOption(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            that.ControlStoryboardOption = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption)Value;
        }
        private object get_153_GlobalMenuControl_HeaderArtiste(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.HeaderArtiste;
        }
        private void set_153_GlobalMenuControl_HeaderArtiste(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.HeaderArtiste = (global::System.String)Value;
        }
        private object get_154_GlobalMenuControl_HeaderMusique(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.HeaderMusique;
        }
        private void set_154_GlobalMenuControl_HeaderMusique(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.HeaderMusique = (global::System.String)Value;
        }
        private object get_155_GlobalMenuControl_HeaderUser(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.HeaderUser;
        }
        private void set_155_GlobalMenuControl_HeaderUser(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.HeaderUser = (global::System.String)Value;
        }
        private object get_156_GlobalMenuControl_HeaderPack(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.HeaderPack;
        }
        private void set_156_GlobalMenuControl_HeaderPack(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.HeaderPack = (global::System.String)Value;
        }
        private object get_157_GlobalMenuControl_HeaderAlbum(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.HeaderAlbum;
        }
        private void set_157_GlobalMenuControl_HeaderAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.HeaderAlbum = (global::System.String)Value;
        }
        private object get_158_GlobalMenuControl_MyResult(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.MyResult;
        }
        private void set_158_GlobalMenuControl_MyResult(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.MyResult = (global::SoonZik.HttpRequest.Poco.SearchResult)Value;
        }
        private object get_159_GlobalMenuControl_SearchText(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.SearchText;
        }
        private void set_159_GlobalMenuControl_SearchText(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.SearchText = (global::System.String)Value;
        }
        private object get_160_GlobalMenuControl_SelectedUser(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.SelectedUser;
        }
        private void set_160_GlobalMenuControl_SelectedUser(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.SelectedUser = (global::SoonZik.HttpRequest.Poco.User)Value;
        }
        private object get_161_GlobalMenuControl_SelectedMusic(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.SelectedMusic;
        }
        private void set_161_GlobalMenuControl_SelectedMusic(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.SelectedMusic = (global::SoonZik.HttpRequest.Poco.Music)Value;
        }
        private object get_162_GlobalMenuControl_SelectedAlbum(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.SelectedAlbum;
        }
        private void set_162_GlobalMenuControl_SelectedAlbum(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.SelectedAlbum = (global::SoonZik.HttpRequest.Poco.Album)Value;
        }
        private object get_163_GlobalMenuControl_SelectedPack(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.SelectedPack;
        }
        private void set_163_GlobalMenuControl_SelectedPack(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.SelectedPack = (global::SoonZik.HttpRequest.Poco.Pack)Value;
        }
        private object get_164_GlobalMenuControl_SelectedBouttonMenu(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.SelectedBouttonMenu;
        }
        private void set_164_GlobalMenuControl_SelectedBouttonMenu(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.SelectedBouttonMenu = (global::SoonZik.Utils.BouttonMenu)Value;
        }
        private object get_165_GlobalMenuControl_ListBouttonMenus(object instance)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            return that.ListBouttonMenus;
        }
        private void set_165_GlobalMenuControl_ListBouttonMenus(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.GlobalMenuControl)instance;
            that.ListBouttonMenus = (global::System.Collections.Generic.List<global::SoonZik.Utils.BouttonMenu>)Value;
        }
        private object get_166_BouttonMenu_ImageBoutton(object instance)
        {
            var that = (global::SoonZik.Utils.BouttonMenu)instance;
            return that.ImageBoutton;
        }
        private void set_166_BouttonMenu_ImageBoutton(object instance, object Value)
        {
            var that = (global::SoonZik.Utils.BouttonMenu)instance;
            that.ImageBoutton = (global::Windows.UI.Xaml.Media.Imaging.BitmapImage)Value;
        }
        private object get_167_BouttonMenu_Title(object instance)
        {
            var that = (global::SoonZik.Utils.BouttonMenu)instance;
            return that.Title;
        }
        private void set_167_BouttonMenu_Title(object instance, object Value)
        {
            var that = (global::SoonZik.Utils.BouttonMenu)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_168_BouttonMenu_PageBoutton(object instance)
        {
            var that = (global::SoonZik.Utils.BouttonMenu)instance;
            return that.PageBoutton;
        }
        private void set_168_BouttonMenu_PageBoutton(object instance, object Value)
        {
            var that = (global::SoonZik.Utils.BouttonMenu)instance;
            that.PageBoutton = (global::System.Object)Value;
        }
        private object get_169_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_169_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_170_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_170_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_171_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_171_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_172_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_172_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_173_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_173_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_174_PlayerControl_ListOfMusics(object instance)
        {
            var that = (global::SoonZik.Controls.PlayerControl)instance;
            return that.ListOfMusics;
        }
        private void set_174_PlayerControl_ListOfMusics(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.PlayerControl)instance;
            that.ListOfMusics = (global::System.Collections.Generic.List<global::SoonZik.HttpRequest.Poco.Music>)Value;
        }
        private object get_175_PlayerControl_PlayedMusic(object instance)
        {
            var that = (global::SoonZik.Controls.PlayerControl)instance;
            return that.PlayedMusic;
        }
        private void set_175_PlayerControl_PlayedMusic(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.PlayerControl)instance;
            that.PlayedMusic = (global::SoonZik.HttpRequest.Poco.Music)Value;
        }
        private object get_176_ProgressRingControl_GridVisibility(object instance)
        {
            var that = (global::SoonZik.Controls.ProgressRingControl)instance;
            return that.GridVisibility;
        }
        private void set_176_ProgressRingControl_GridVisibility(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.ProgressRingControl)instance;
            that.GridVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_177_ProgressRingControl_isActive(object instance)
        {
            var that = (global::SoonZik.Controls.ProgressRingControl)instance;
            return that.isActive;
        }
        private void set_177_ProgressRingControl_isActive(object instance, object Value)
        {
            var that = (global::SoonZik.Controls.ProgressRingControl)instance;
            that.isActive = (global::System.Boolean)Value;
        }
        private object get_178_BooleanConverter_True(object instance)
        {
            var that = (global::SoonZik.Utils.BooleanConverter<global::Windows.UI.Xaml.Visibility>)instance;
            return that.True;
        }
        private void set_178_BooleanConverter_True(object instance, object Value)
        {
            var that = (global::SoonZik.Utils.BooleanConverter<global::Windows.UI.Xaml.Visibility>)instance;
            that.True = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_179_BooleanConverter_False(object instance)
        {
            var that = (global::SoonZik.Utils.BooleanConverter<global::Windows.UI.Xaml.Visibility>)instance;
            return that.False;
        }
        private void set_179_BooleanConverter_False(object instance, object Value)
        {
            var that = (global::SoonZik.Utils.BooleanConverter<global::Windows.UI.Xaml.Visibility>)instance;
            that.False = (global::Windows.UI.Xaml.Visibility)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SoonZik.SoonZik_XamlTypeInfo.XamlMember xamlMember = null;
            global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "SoonZik.ViewModel.ViewModelLocator.Main":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Main", "SoonZik.ViewModel.MainViewModel");
                xamlMember.Getter = get_0_ViewModelLocator_Main;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.Connexion":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Connexion", "SoonZik.ViewModel.ConnexionViewModel");
                xamlMember.Getter = get_1_ViewModelLocator_Connexion;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.News":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "News", "SoonZik.ViewModel.NewsViewModel");
                xamlMember.Getter = get_2_ViewModelLocator_News;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.Pack":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Pack", "SoonZik.ViewModel.PackViewModel");
                xamlMember.Getter = get_3_ViewModelLocator_Pack;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.ProfilUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ProfilUser", "SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember.Getter = get_4_ViewModelLocator_ProfilUser;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.ProfilArtiste":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ProfilArtiste", "SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember.Getter = get_5_ViewModelLocator_ProfilArtiste;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.Battle":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Battle", "SoonZik.ViewModel.BattleViewModel");
                xamlMember.Getter = get_6_ViewModelLocator_Battle;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.Friend":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Friend", "SoonZik.ViewModel.FriendViewModel");
                xamlMember.Getter = get_7_ViewModelLocator_Friend;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.Conversation":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Conversation", "SoonZik.ViewModel.ConversationViewModel");
                xamlMember.Getter = get_8_ViewModelLocator_Conversation;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.MainPage":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "MainPage", "SoonZik.ViewModel.MainPageViewModel");
                xamlMember.Getter = get_9_ViewModelLocator_MainPage;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.Explorer":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Explorer", "SoonZik.ViewModel.ExplorerViewModel");
                xamlMember.Getter = get_10_ViewModelLocator_Explorer;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.NewsDetail":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "NewsDetail", "SoonZik.ViewModel.NewsDetailViewModel");
                xamlMember.Getter = get_11_ViewModelLocator_NewsDetail;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.ProfilFriend":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ProfilFriend", "SoonZik.ViewModel.ProfilFriendViewModel");
                xamlMember.Getter = get_12_ViewModelLocator_ProfilFriend;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.AlbumView":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "AlbumView", "SoonZik.ViewModel.AlbumViewModel");
                xamlMember.Getter = get_13_ViewModelLocator_AlbumView;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.GeolocView":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "GeolocView", "SoonZik.Views.GeolocalisationView");
                xamlMember.Getter = get_14_ViewModelLocator_GeolocView;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.PlaylistView":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "PlaylistView", "SoonZik.ViewModel.PlaylistViewModel");
                xamlMember.Getter = get_15_ViewModelLocator_PlaylistView;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ViewModelLocator.InscriptionView":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ViewModelLocator");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "InscriptionView", "SoonZik.ViewModel.InscriptionViewModel");
                xamlMember.Getter = get_16_ViewModelLocator_InscriptionView;
                xamlMember.SetIsReadOnly();
                break;
            case "GalaSoft.MvvmLight.ViewModelBase.IsInDesignMode":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "IsInDesignMode", "Boolean");
                xamlMember.Getter = get_17_ViewModelBase_IsInDesignMode;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.SelectionCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectionCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_18_ConnexionViewModel_SelectionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.ProgressOn":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ProgressOn", "Boolean");
                xamlMember.Getter = get_19_ConnexionViewModel_ProgressOn;
                xamlMember.Setter = set_19_ConnexionViewModel_ProgressOn;
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.Username":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Username", "String");
                xamlMember.Getter = get_20_ConnexionViewModel_Username;
                xamlMember.Setter = set_20_ConnexionViewModel_Username;
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.Password":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_21_ConnexionViewModel_Password;
                xamlMember.Setter = set_21_ConnexionViewModel_Password;
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.ConnexionCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ConnexionCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_22_ConnexionViewModel_ConnexionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.InscritpiomCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "InscritpiomCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_23_ConnexionViewModel_InscritpiomCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ConnexionViewModel.FacebookTapped":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ConnexionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "FacebookTapped", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_24_ConnexionViewModel_FacebookTapped;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.NewsViewModel.ListNews":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.NewsViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListNews", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.News>");
                xamlMember.Getter = get_25_NewsViewModel_ListNews;
                xamlMember.Setter = set_25_NewsViewModel_ListNews;
                break;
            case "SoonZik.HttpRequest.Poco.News.Id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Id", "Int32");
                xamlMember.Getter = get_26_News_Id;
                xamlMember.Setter = set_26_News_Id;
                break;
            case "SoonZik.HttpRequest.Poco.News.Title":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_27_News_Title;
                xamlMember.Setter = set_27_News_Title;
                break;
            case "SoonZik.HttpRequest.Poco.News.Date":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Date", "String");
                xamlMember.Getter = get_28_News_Date;
                xamlMember.Setter = set_28_News_Date;
                break;
            case "SoonZik.HttpRequest.Poco.News.AuthorId":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "AuthorId", "Int32");
                xamlMember.Getter = get_29_News_AuthorId;
                xamlMember.Setter = set_29_News_AuthorId;
                break;
            case "SoonZik.HttpRequest.Poco.News.CreatedAt":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CreatedAt", "String");
                xamlMember.Getter = get_30_News_CreatedAt;
                xamlMember.Setter = set_30_News_CreatedAt;
                break;
            case "SoonZik.HttpRequest.Poco.News.UpdatedAt":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "UpdatedAt", "String");
                xamlMember.Getter = get_31_News_UpdatedAt;
                xamlMember.Setter = set_31_News_UpdatedAt;
                break;
            case "SoonZik.HttpRequest.Poco.News.NewsType":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "NewsType", "String");
                xamlMember.Getter = get_32_News_NewsType;
                xamlMember.Setter = set_32_News_NewsType;
                break;
            case "SoonZik.HttpRequest.Poco.News.User":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "User", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_33_News_User;
                xamlMember.Setter = set_33_News_User;
                break;
            case "SoonZik.HttpRequest.Poco.News.Newstexts":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Newstexts", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Newstext>");
                xamlMember.Getter = get_34_News_Newstexts;
                xamlMember.Setter = set_34_News_Newstexts;
                break;
            case "SoonZik.HttpRequest.Poco.Newstext.id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Newstext");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_35_Newstext_id;
                xamlMember.Setter = set_35_Newstext_id;
                break;
            case "SoonZik.HttpRequest.Poco.Newstext.content":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Newstext");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "content", "String");
                xamlMember.Getter = get_36_Newstext_content;
                xamlMember.Setter = set_36_Newstext_content;
                break;
            case "SoonZik.HttpRequest.Poco.Newstext.title":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Newstext");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_37_Newstext_title;
                xamlMember.Setter = set_37_Newstext_title;
                break;
            case "SoonZik.HttpRequest.Poco.Newstext.language":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Newstext");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "language", "String");
                xamlMember.Getter = get_38_Newstext_language;
                xamlMember.Setter = set_38_Newstext_language;
                break;
            case "SoonZik.HttpRequest.Poco.News.Attachments":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Attachments", "System.Collections.Generic.List`1<Object>");
                xamlMember.Getter = get_39_News_Attachments;
                xamlMember.Setter = set_39_News_Attachments;
                break;
            case "SoonZik.HttpRequest.Poco.News.Tags":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.News");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Tags", "System.Collections.Generic.List`1<Object>");
                xamlMember.Getter = get_40_News_Tags;
                xamlMember.Setter = set_40_News_Tags;
                break;
            case "SoonZik.ViewModel.NewsViewModel.ShareTapped":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.NewsViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ShareTapped", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_41_NewsViewModel_ShareTapped;
                xamlMember.Setter = set_41_NewsViewModel_ShareTapped;
                break;
            case "SoonZik.ViewModel.NewsViewModel.SelectedNews":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.NewsViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedNews", "SoonZik.HttpRequest.Poco.News");
                xamlMember.Getter = get_42_NewsViewModel_SelectedNews;
                xamlMember.Setter = set_42_NewsViewModel_SelectedNews;
                break;
            case "SoonZik.ViewModel.NewsViewModel.ItemClickCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.NewsViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ItemClickCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_43_NewsViewModel_ItemClickCommand;
                xamlMember.Setter = set_43_NewsViewModel_ItemClickCommand;
                break;
            case "SoonZik.ViewModel.ExplorerViewModel.ListGenres":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ExplorerViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListGenres", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Genre>");
                xamlMember.Getter = get_44_ExplorerViewModel_ListGenres;
                xamlMember.Setter = set_44_ExplorerViewModel_ListGenres;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_45_Genre_id;
                xamlMember.Setter = set_45_Genre_id;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.style_name":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "style_name", "String");
                xamlMember.Getter = get_46_Genre_style_name;
                xamlMember.Setter = set_46_Genre_style_name;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.color_name":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "color_name", "String");
                xamlMember.Getter = get_47_Genre_color_name;
                xamlMember.Setter = set_47_Genre_color_name;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.color_hexa":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "color_hexa", "String");
                xamlMember.Getter = get_48_Genre_color_hexa;
                xamlMember.Setter = set_48_Genre_color_hexa;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.created_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_49_Genre_created_at;
                xamlMember.Setter = set_49_Genre_created_at;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.updated_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "updated_at", "String");
                xamlMember.Getter = get_50_Genre_updated_at;
                xamlMember.Setter = set_50_Genre_updated_at;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.influences":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "influences", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Influence>");
                xamlMember.Getter = get_51_Genre_influences;
                xamlMember.Setter = set_51_Genre_influences;
                break;
            case "SoonZik.HttpRequest.Poco.Influence.id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Influence");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_52_Influence_id;
                xamlMember.Setter = set_52_Influence_id;
                break;
            case "SoonZik.HttpRequest.Poco.Influence.name":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Influence");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "name", "String");
                xamlMember.Getter = get_53_Influence_name;
                xamlMember.Setter = set_53_Influence_name;
                break;
            case "SoonZik.HttpRequest.Poco.Influence.created_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Influence");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_54_Influence_created_at;
                xamlMember.Setter = set_54_Influence_created_at;
                break;
            case "SoonZik.HttpRequest.Poco.Influence.updated_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Influence");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "updated_at", "String");
                xamlMember.Getter = get_55_Influence_updated_at;
                xamlMember.Setter = set_55_Influence_updated_at;
                break;
            case "SoonZik.HttpRequest.Poco.Genre.musics":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Genre");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "musics", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Music>");
                xamlMember.Getter = get_56_Genre_musics;
                xamlMember.Setter = set_56_Genre_musics;
                break;
            case "SoonZik.HttpRequest.Poco.Music.id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_57_Music_id;
                xamlMember.Setter = set_57_Music_id;
                break;
            case "SoonZik.HttpRequest.Poco.Music.title":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_58_Music_title;
                xamlMember.Setter = set_58_Music_title;
                break;
            case "SoonZik.HttpRequest.Poco.Music.duration":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "duration", "Int32");
                xamlMember.Getter = get_59_Music_duration;
                xamlMember.Setter = set_59_Music_duration;
                break;
            case "SoonZik.HttpRequest.Poco.Music.price":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "price", "Double");
                xamlMember.Getter = get_60_Music_price;
                xamlMember.Setter = set_60_Music_price;
                break;
            case "SoonZik.HttpRequest.Poco.Music.file":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "file", "String");
                xamlMember.Getter = get_61_Music_file;
                xamlMember.Setter = set_61_Music_file;
                break;
            case "SoonZik.HttpRequest.Poco.Music.album":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "album", "SoonZik.HttpRequest.Poco.Album");
                xamlMember.Getter = get_62_Music_album;
                xamlMember.Setter = set_62_Music_album;
                break;
            case "SoonZik.HttpRequest.Poco.Music.genres":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "genres", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Genre>");
                xamlMember.Getter = get_63_Music_genres;
                xamlMember.Setter = set_63_Music_genres;
                break;
            case "SoonZik.HttpRequest.Poco.Music.user":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Music");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "user", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_64_Music_user;
                xamlMember.Setter = set_64_Music_user;
                break;
            case "SoonZik.ViewModel.ExplorerViewModel.ListMusique":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ExplorerViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListMusique", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Music>");
                xamlMember.Getter = get_65_ExplorerViewModel_ListMusique;
                xamlMember.Setter = set_65_ExplorerViewModel_ListMusique;
                break;
            case "SoonZik.ViewModel.ExplorerViewModel.ListArtiste":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ExplorerViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListArtiste", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember.Getter = get_66_ExplorerViewModel_ListArtiste;
                xamlMember.Setter = set_66_ExplorerViewModel_ListArtiste;
                break;
            case "SoonZik.HttpRequest.Poco.User.id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_67_User_id;
                xamlMember.Setter = set_67_User_id;
                break;
            case "SoonZik.HttpRequest.Poco.User.email":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "email", "String");
                xamlMember.Getter = get_68_User_email;
                xamlMember.Setter = set_68_User_email;
                break;
            case "SoonZik.HttpRequest.Poco.User.salt":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "salt", "String");
                xamlMember.Getter = get_69_User_salt;
                xamlMember.Setter = set_69_User_salt;
                break;
            case "SoonZik.HttpRequest.Poco.User.fname":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "fname", "String");
                xamlMember.Getter = get_70_User_fname;
                xamlMember.Setter = set_70_User_fname;
                break;
            case "SoonZik.HttpRequest.Poco.User.lname":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "lname", "String");
                xamlMember.Getter = get_71_User_lname;
                xamlMember.Setter = set_71_User_lname;
                break;
            case "SoonZik.HttpRequest.Poco.User.username":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "username", "String");
                xamlMember.Getter = get_72_User_username;
                xamlMember.Setter = set_72_User_username;
                break;
            case "SoonZik.HttpRequest.Poco.User.birthday":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "birthday", "String");
                xamlMember.Getter = get_73_User_birthday;
                xamlMember.Setter = set_73_User_birthday;
                break;
            case "SoonZik.HttpRequest.Poco.User.image":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "image", "String");
                xamlMember.Getter = get_74_User_image;
                xamlMember.Setter = set_74_User_image;
                break;
            case "SoonZik.HttpRequest.Poco.User.description":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "description", "String");
                xamlMember.Getter = get_75_User_description;
                xamlMember.Setter = set_75_User_description;
                break;
            case "SoonZik.HttpRequest.Poco.User.phoneNumber":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "phoneNumber", "String");
                xamlMember.Getter = get_76_User_phoneNumber;
                xamlMember.Setter = set_76_User_phoneNumber;
                break;
            case "SoonZik.HttpRequest.Poco.User.facebook":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "facebook", "Object");
                xamlMember.Getter = get_77_User_facebook;
                xamlMember.Setter = set_77_User_facebook;
                break;
            case "SoonZik.HttpRequest.Poco.User.twitter":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "twitter", "Object");
                xamlMember.Getter = get_78_User_twitter;
                xamlMember.Setter = set_78_User_twitter;
                break;
            case "SoonZik.HttpRequest.Poco.User.googlePlus":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "googlePlus", "Object");
                xamlMember.Getter = get_79_User_googlePlus;
                xamlMember.Setter = set_79_User_googlePlus;
                break;
            case "SoonZik.HttpRequest.Poco.User.newsletter":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "newsletter", "Boolean");
                xamlMember.Getter = get_80_User_newsletter;
                xamlMember.Setter = set_80_User_newsletter;
                break;
            case "SoonZik.HttpRequest.Poco.User.language":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "language", "String");
                xamlMember.Getter = get_81_User_language;
                xamlMember.Setter = set_81_User_language;
                break;
            case "SoonZik.HttpRequest.Poco.User.created_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_82_User_created_at;
                xamlMember.Setter = set_82_User_created_at;
                break;
            case "SoonZik.HttpRequest.Poco.User.address":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "address", "SoonZik.HttpRequest.Poco.Address");
                xamlMember.Getter = get_83_User_address;
                xamlMember.Setter = set_83_User_address;
                break;
            case "SoonZik.HttpRequest.Poco.User.friends":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "friends", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember.Getter = get_84_User_friends;
                xamlMember.Setter = set_84_User_friends;
                break;
            case "SoonZik.HttpRequest.Poco.User.follows":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.User");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "follows", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember.Getter = get_85_User_follows;
                xamlMember.Setter = set_85_User_follows;
                break;
            case "SoonZik.ViewModel.ExplorerViewModel.SelectedMusic":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ExplorerViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedMusic", "SoonZik.HttpRequest.Poco.Music");
                xamlMember.Getter = get_86_ExplorerViewModel_SelectedMusic;
                xamlMember.Setter = set_86_ExplorerViewModel_SelectedMusic;
                break;
            case "SoonZik.ViewModel.ExplorerViewModel.MusiCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ExplorerViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "MusiCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_87_ExplorerViewModel_MusiCommand;
                xamlMember.Setter = set_87_ExplorerViewModel_MusiCommand;
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.CurrentUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CurrentUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_88_ProfilUserViewModel_CurrentUser;
                xamlMember.Setter = set_88_ProfilUserViewModel_CurrentUser;
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.SelectUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_89_ProfilUserViewModel_SelectUser;
                xamlMember.Setter = set_89_ProfilUserViewModel_SelectUser;
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.FollowerCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "FollowerCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_90_ProfilUserViewModel_FollowerCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.SelectionCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectionCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_91_ProfilUserViewModel_SelectionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.EditClickCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "EditClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_92_ProfilUserViewModel_EditClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.CanUpdate":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CanUpdate", "Boolean");
                xamlMember.Getter = get_93_ProfilUserViewModel_CanUpdate;
                xamlMember.Setter = set_93_ProfilUserViewModel_CanUpdate;
                break;
            case "SoonZik.ViewModel.ProfilUserViewModel.ButtonContent":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilUserViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ButtonContent", "String");
                xamlMember.Getter = get_94_ProfilUserViewModel_ButtonContent;
                xamlMember.Setter = set_94_ProfilUserViewModel_ButtonContent;
                break;
            case "SoonZik.ViewModel.ProfilFriendViewModel.CurrentUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilFriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CurrentUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_95_ProfilFriendViewModel_CurrentUser;
                xamlMember.Setter = set_95_ProfilFriendViewModel_CurrentUser;
                break;
            case "SoonZik.ViewModel.ProfilFriendViewModel.SelectUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilFriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_96_ProfilFriendViewModel_SelectUser;
                xamlMember.Setter = set_96_ProfilFriendViewModel_SelectUser;
                break;
            case "SoonZik.ViewModel.ProfilFriendViewModel.SelectionCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilFriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectionCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_97_ProfilFriendViewModel_SelectionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.PackViewModel.Datas":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PackViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Datas", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.ViewModel.Data>");
                xamlMember.Getter = get_98_PackViewModel_Datas;
                xamlMember.Setter = set_98_PackViewModel_Datas;
                break;
            case "SoonZik.ViewModel.Data.BitmapImage":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.Data");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "BitmapImage", "Windows.UI.Xaml.Media.Imaging.BitmapImage");
                xamlMember.Getter = get_99_Data_BitmapImage;
                xamlMember.Setter = set_99_Data_BitmapImage;
                break;
            case "SoonZik.ViewModel.Data.Title":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.Data");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_100_Data_Title;
                xamlMember.Setter = set_100_Data_Title;
                break;
            case "SoonZik.ViewModel.PackViewModel.SelectedData":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PackViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedData", "SoonZik.ViewModel.Data");
                xamlMember.Getter = get_101_PackViewModel_SelectedData;
                xamlMember.Setter = set_101_PackViewModel_SelectedData;
                break;
            case "SoonZik.ViewModel.PackViewModel.SelectedAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PackViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedAlbum", "SoonZik.HttpRequest.Poco.Album");
                xamlMember.Getter = get_102_PackViewModel_SelectedAlbum;
                xamlMember.Setter = set_102_PackViewModel_SelectedAlbum;
                break;
            case "SoonZik.ViewModel.PackViewModel.ListAlbums":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PackViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListAlbums", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Album>");
                xamlMember.Getter = get_103_PackViewModel_ListAlbums;
                xamlMember.Setter = set_103_PackViewModel_ListAlbums;
                break;
            case "SoonZik.HttpRequest.Poco.Album.id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_104_Album_id;
                xamlMember.Setter = set_104_Album_id;
                break;
            case "SoonZik.HttpRequest.Poco.Album.user_id":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "user_id", "Int32");
                xamlMember.Getter = get_105_Album_user_id;
                xamlMember.Setter = set_105_Album_user_id;
                break;
            case "SoonZik.HttpRequest.Poco.Album.title":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_106_Album_title;
                xamlMember.Setter = set_106_Album_title;
                break;
            case "SoonZik.HttpRequest.Poco.Album.image":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "image", "String");
                xamlMember.Getter = get_107_Album_image;
                xamlMember.Setter = set_107_Album_image;
                break;
            case "SoonZik.HttpRequest.Poco.Album.price":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "price", "Double");
                xamlMember.Getter = get_108_Album_price;
                xamlMember.Setter = set_108_Album_price;
                break;
            case "SoonZik.HttpRequest.Poco.Album.file":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "file", "String");
                xamlMember.Getter = get_109_Album_file;
                xamlMember.Setter = set_109_Album_file;
                break;
            case "SoonZik.HttpRequest.Poco.Album.yearProd":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "yearProd", "Int32");
                xamlMember.Getter = get_110_Album_yearProd;
                xamlMember.Setter = set_110_Album_yearProd;
                break;
            case "SoonZik.HttpRequest.Poco.Album.created_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_111_Album_created_at;
                xamlMember.Setter = set_111_Album_created_at;
                break;
            case "SoonZik.HttpRequest.Poco.Album.updated_at":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "updated_at", "String");
                xamlMember.Getter = get_112_Album_updated_at;
                xamlMember.Setter = set_112_Album_updated_at;
                break;
            case "SoonZik.HttpRequest.Poco.Album.musics":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "musics", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Music>");
                xamlMember.Getter = get_113_Album_musics;
                xamlMember.Setter = set_113_Album_musics;
                break;
            case "SoonZik.HttpRequest.Poco.Album.user":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.HttpRequest.Poco.Album");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "user", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_114_Album_user;
                xamlMember.Setter = set_114_Album_user;
                break;
            case "SoonZik.ViewModel.PackViewModel.SelectionCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PackViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectionCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_115_PackViewModel_SelectionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.NewsDetailViewModel.SelectNews":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.NewsDetailViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectNews", "SoonZik.HttpRequest.Poco.News");
                xamlMember.Getter = get_116_NewsDetailViewModel_SelectNews;
                xamlMember.Setter = set_116_NewsDetailViewModel_SelectNews;
                break;
            case "SoonZik.ViewModel.FriendViewModel.Sources":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.FriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Sources", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember.Getter = get_117_FriendViewModel_Sources;
                xamlMember.Setter = set_117_FriendViewModel_Sources;
                break;
            case "SoonZik.ViewModel.FriendViewModel.ItemSource":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.FriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ItemSource", "System.Collections.Generic.List`1<SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>>");
                xamlMember.Getter = get_118_FriendViewModel_ItemSource;
                xamlMember.Setter = set_118_FriendViewModel_ItemSource;
                break;
            case "SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>.Key":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Utils.AlphaKeyGroups`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Key", "String");
                xamlMember.Getter = get_119_AlphaKeyGroups_Key;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>.Capacity":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Capacity", "Int32");
                xamlMember.Getter = get_120_List_Capacity;
                xamlMember.Setter = set_120_List_Capacity;
                break;
            case "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>.Count":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.User>");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_121_List_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.FriendViewModel.TappedCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.FriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "TappedCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_122_FriendViewModel_TappedCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.FriendViewModel.SelectedUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.FriendViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_123_FriendViewModel_SelectedUser;
                xamlMember.Setter = set_123_FriendViewModel_SelectedUser;
                break;
            case "SoonZik.ViewModel.AlbumViewModel.ImageAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.AlbumViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ImageAlbum", "String");
                xamlMember.Getter = get_124_AlbumViewModel_ImageAlbum;
                xamlMember.Setter = set_124_AlbumViewModel_ImageAlbum;
                break;
            case "SoonZik.ViewModel.AlbumViewModel.ListMusics":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.AlbumViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListMusics", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Music>");
                xamlMember.Getter = get_125_AlbumViewModel_ListMusics;
                xamlMember.Setter = set_125_AlbumViewModel_ListMusics;
                break;
            case "SoonZik.ViewModel.AlbumViewModel.TheAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.AlbumViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "TheAlbum", "SoonZik.HttpRequest.Poco.Album");
                xamlMember.Getter = get_126_AlbumViewModel_TheAlbum;
                xamlMember.Setter = set_126_AlbumViewModel_TheAlbum;
                break;
            case "SoonZik.ViewModel.AlbumViewModel.ItemClickCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.AlbumViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ItemClickCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_127_AlbumViewModel_ItemClickCommand;
                xamlMember.Setter = set_127_AlbumViewModel_ItemClickCommand;
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.FollowCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "FollowCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_128_ProfilArtisteViewModel_FollowCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.TheArtiste":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "TheArtiste", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_129_ProfilArtisteViewModel_TheArtiste;
                xamlMember.Setter = set_129_ProfilArtisteViewModel_TheArtiste;
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.FollowText":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "FollowText", "String");
                xamlMember.Getter = get_130_ProfilArtisteViewModel_FollowText;
                xamlMember.Setter = set_130_ProfilArtisteViewModel_FollowText;
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.ListAlbums":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListAlbums", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Album>");
                xamlMember.Getter = get_131_ProfilArtisteViewModel_ListAlbums;
                xamlMember.Setter = set_131_ProfilArtisteViewModel_ListAlbums;
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.SelectionCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectionCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_132_ProfilArtisteViewModel_SelectionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.ItemClickCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ItemClickCommand", "GalaSoft.MvvmLight.Command.RelayCommand");
                xamlMember.Getter = get_133_ProfilArtisteViewModel_ItemClickCommand;
                xamlMember.Setter = set_133_ProfilArtisteViewModel_ItemClickCommand;
                break;
            case "SoonZik.ViewModel.ProfilArtisteViewModel.TheAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.ProfilArtisteViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "TheAlbum", "SoonZik.HttpRequest.Poco.Album");
                xamlMember.Getter = get_134_ProfilArtisteViewModel_TheAlbum;
                xamlMember.Setter = set_134_ProfilArtisteViewModel_TheAlbum;
                break;
            case "SoonZik.ViewModel.InscriptionViewModel.Password":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.InscriptionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_135_InscriptionViewModel_Password;
                xamlMember.Setter = set_135_InscriptionViewModel_Password;
                break;
            case "SoonZik.ViewModel.InscriptionViewModel.Birthday":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.InscriptionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Birthday", "System.DateTimeOffset");
                xamlMember.Getter = get_136_InscriptionViewModel_Birthday;
                xamlMember.Setter = set_136_InscriptionViewModel_Birthday;
                break;
            case "SoonZik.ViewModel.InscriptionViewModel.ValidateCommand":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.InscriptionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ValidateCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_137_InscriptionViewModel_ValidateCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "SoonZik.ViewModel.InscriptionViewModel.NewUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.InscriptionViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "NewUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_138_InscriptionViewModel_NewUser;
                xamlMember.Setter = set_138_InscriptionViewModel_NewUser;
                break;
            case "SoonZik.ViewModel.GeolocalisationViewModel.UserLocation":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.GeolocalisationViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "UserLocation", "Windows.Devices.Geolocation.Geocoordinate");
                xamlMember.Getter = get_139_GeolocalisationViewModel_UserLocation;
                xamlMember.Setter = set_139_GeolocalisationViewModel_UserLocation;
                break;
            case "SoonZik.ViewModel.PlaylistViewModel.ListAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PlaylistViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListAlbum", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Album>");
                xamlMember.Getter = get_140_PlaylistViewModel_ListAlbum;
                xamlMember.Setter = set_140_PlaylistViewModel_ListAlbum;
                break;
            case "SoonZik.ViewModel.PlaylistViewModel.ListMusique":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PlaylistViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListMusique", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Music>");
                xamlMember.Getter = get_141_PlaylistViewModel_ListMusique;
                xamlMember.Setter = set_141_PlaylistViewModel_ListMusique;
                break;
            case "SoonZik.ViewModel.PlaylistViewModel.ListPlaylist":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PlaylistViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListPlaylist", "System.Collections.ObjectModel.ObservableCollection`1<SoonZik.HttpRequest.Poco.Playlist>");
                xamlMember.Getter = get_142_PlaylistViewModel_ListPlaylist;
                xamlMember.Setter = set_142_PlaylistViewModel_ListPlaylist;
                break;
            case "SoonZik.ViewModel.PlaylistViewModel.SelectedMusic":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PlaylistViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedMusic", "SoonZik.HttpRequest.Poco.Music");
                xamlMember.Getter = get_143_PlaylistViewModel_SelectedMusic;
                xamlMember.Setter = set_143_PlaylistViewModel_SelectedMusic;
                break;
            case "SoonZik.ViewModel.PlaylistViewModel.SelectedAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PlaylistViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedAlbum", "SoonZik.HttpRequest.Poco.Album");
                xamlMember.Getter = get_144_PlaylistViewModel_SelectedAlbum;
                xamlMember.Setter = set_144_PlaylistViewModel_SelectedAlbum;
                break;
            case "SoonZik.ViewModel.PlaylistViewModel.SelectedPlaylist":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.ViewModel.PlaylistViewModel");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedPlaylist", "SoonZik.HttpRequest.Poco.Playlist");
                xamlMember.Getter = get_145_PlaylistViewModel_SelectedPlaylist;
                xamlMember.Setter = set_145_PlaylistViewModel_SelectedPlaylist;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_146_Interaction_Behaviors;
                xamlMember.Setter = set_146_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_148_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_149_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.AssociatedObject":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_150_EventTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Media.ControlStoryboardAction.Storyboard":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Media.ControlStoryboardAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Storyboard", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_ControlStoryboardAction_Storyboard;
                xamlMember.Setter = set_151_ControlStoryboardAction_Storyboard;
                break;
            case "Microsoft.Xaml.Interactions.Media.ControlStoryboardAction.ControlStoryboardOption":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Media.ControlStoryboardAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ControlStoryboardOption", "Microsoft.Xaml.Interactions.Media.ControlStoryboardOption");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_ControlStoryboardAction_ControlStoryboardOption;
                xamlMember.Setter = set_152_ControlStoryboardAction_ControlStoryboardOption;
                break;
            case "SoonZik.Controls.GlobalMenuControl.HeaderArtiste":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "HeaderArtiste", "String");
                xamlMember.Getter = get_153_GlobalMenuControl_HeaderArtiste;
                xamlMember.Setter = set_153_GlobalMenuControl_HeaderArtiste;
                break;
            case "SoonZik.Controls.GlobalMenuControl.HeaderMusique":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "HeaderMusique", "String");
                xamlMember.Getter = get_154_GlobalMenuControl_HeaderMusique;
                xamlMember.Setter = set_154_GlobalMenuControl_HeaderMusique;
                break;
            case "SoonZik.Controls.GlobalMenuControl.HeaderUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "HeaderUser", "String");
                xamlMember.Getter = get_155_GlobalMenuControl_HeaderUser;
                xamlMember.Setter = set_155_GlobalMenuControl_HeaderUser;
                break;
            case "SoonZik.Controls.GlobalMenuControl.HeaderPack":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "HeaderPack", "String");
                xamlMember.Getter = get_156_GlobalMenuControl_HeaderPack;
                xamlMember.Setter = set_156_GlobalMenuControl_HeaderPack;
                break;
            case "SoonZik.Controls.GlobalMenuControl.HeaderAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "HeaderAlbum", "String");
                xamlMember.Getter = get_157_GlobalMenuControl_HeaderAlbum;
                xamlMember.Setter = set_157_GlobalMenuControl_HeaderAlbum;
                break;
            case "SoonZik.Controls.GlobalMenuControl.MyResult":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "MyResult", "SoonZik.HttpRequest.Poco.SearchResult");
                xamlMember.Getter = get_158_GlobalMenuControl_MyResult;
                xamlMember.Setter = set_158_GlobalMenuControl_MyResult;
                break;
            case "SoonZik.Controls.GlobalMenuControl.SearchText":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SearchText", "String");
                xamlMember.Getter = get_159_GlobalMenuControl_SearchText;
                xamlMember.Setter = set_159_GlobalMenuControl_SearchText;
                break;
            case "SoonZik.Controls.GlobalMenuControl.SelectedUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedUser", "SoonZik.HttpRequest.Poco.User");
                xamlMember.Getter = get_160_GlobalMenuControl_SelectedUser;
                xamlMember.Setter = set_160_GlobalMenuControl_SelectedUser;
                break;
            case "SoonZik.Controls.GlobalMenuControl.SelectedMusic":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedMusic", "SoonZik.HttpRequest.Poco.Music");
                xamlMember.Getter = get_161_GlobalMenuControl_SelectedMusic;
                xamlMember.Setter = set_161_GlobalMenuControl_SelectedMusic;
                break;
            case "SoonZik.Controls.GlobalMenuControl.SelectedAlbum":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedAlbum", "SoonZik.HttpRequest.Poco.Album");
                xamlMember.Getter = get_162_GlobalMenuControl_SelectedAlbum;
                xamlMember.Setter = set_162_GlobalMenuControl_SelectedAlbum;
                break;
            case "SoonZik.Controls.GlobalMenuControl.SelectedPack":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedPack", "SoonZik.HttpRequest.Poco.Pack");
                xamlMember.Getter = get_163_GlobalMenuControl_SelectedPack;
                xamlMember.Setter = set_163_GlobalMenuControl_SelectedPack;
                break;
            case "SoonZik.Controls.GlobalMenuControl.SelectedBouttonMenu":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "SelectedBouttonMenu", "SoonZik.Utils.BouttonMenu");
                xamlMember.Getter = get_164_GlobalMenuControl_SelectedBouttonMenu;
                xamlMember.Setter = set_164_GlobalMenuControl_SelectedBouttonMenu;
                break;
            case "SoonZik.Controls.GlobalMenuControl.ListBouttonMenus":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.GlobalMenuControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListBouttonMenus", "System.Collections.Generic.List`1<SoonZik.Utils.BouttonMenu>");
                xamlMember.Getter = get_165_GlobalMenuControl_ListBouttonMenus;
                xamlMember.Setter = set_165_GlobalMenuControl_ListBouttonMenus;
                break;
            case "SoonZik.Utils.BouttonMenu.ImageBoutton":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Utils.BouttonMenu");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ImageBoutton", "Windows.UI.Xaml.Media.Imaging.BitmapImage");
                xamlMember.Getter = get_166_BouttonMenu_ImageBoutton;
                xamlMember.Setter = set_166_BouttonMenu_ImageBoutton;
                break;
            case "SoonZik.Utils.BouttonMenu.Title":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Utils.BouttonMenu");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_167_BouttonMenu_Title;
                xamlMember.Setter = set_167_BouttonMenu_Title;
                break;
            case "SoonZik.Utils.BouttonMenu.PageBoutton":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Utils.BouttonMenu");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "PageBoutton", "Object");
                xamlMember.Getter = get_168_BouttonMenu_PageBoutton;
                xamlMember.Setter = set_168_BouttonMenu_PageBoutton;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_InvokeCommandAction_Command;
                xamlMember.Setter = set_169_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_170_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_171_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_172_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_173_InvokeCommandAction_InputConverterLanguage;
                break;
            case "SoonZik.Controls.PlayerControl.ListOfMusics":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.PlayerControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "ListOfMusics", "System.Collections.Generic.List`1<SoonZik.HttpRequest.Poco.Music>");
                xamlMember.Getter = get_174_PlayerControl_ListOfMusics;
                xamlMember.Setter = set_174_PlayerControl_ListOfMusics;
                break;
            case "SoonZik.Controls.PlayerControl.PlayedMusic":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.PlayerControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "PlayedMusic", "SoonZik.HttpRequest.Poco.Music");
                xamlMember.Getter = get_175_PlayerControl_PlayedMusic;
                xamlMember.Setter = set_175_PlayerControl_PlayedMusic;
                break;
            case "SoonZik.Controls.ProgressRingControl.GridVisibility":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.ProgressRingControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "GridVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_ProgressRingControl_GridVisibility;
                xamlMember.Setter = set_176_ProgressRingControl_GridVisibility;
                break;
            case "SoonZik.Controls.ProgressRingControl.isActive":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Controls.ProgressRingControl");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "isActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_ProgressRingControl_isActive;
                xamlMember.Setter = set_177_ProgressRingControl_isActive;
                break;
            case "SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>.True":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "True", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_178_BooleanConverter_True;
                xamlMember.Setter = set_178_BooleanConverter_True;
                break;
            case "SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>.False":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoonZik.Utils.BooleanConverter`1<Windows.UI.Xaml.Visibility>");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "False", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_179_BooleanConverter_False;
                xamlMember.Setter = set_179_BooleanConverter_False;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType
    {
        global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


