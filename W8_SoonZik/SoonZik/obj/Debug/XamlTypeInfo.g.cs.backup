//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace SoonZik
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace SoonZik.SoonZik_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[119];
            _typeNameTable[0] = "Blend.SampleData.ListNews.ListNews";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "Blend.SampleData.ListNews.GroupCollection";
            _typeNameTable[3] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.ListNews.Group>";
            _typeNameTable[4] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.ListNews.Group>";
            _typeNameTable[5] = "Blend.SampleData.ListNews.Group";
            _typeNameTable[6] = "String";
            _typeNameTable[7] = "Blend.SampleData.ListNews.ItemCollection";
            _typeNameTable[8] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.ListNews.Item>";
            _typeNameTable[9] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.ListNews.Item>";
            _typeNameTable[10] = "Blend.SampleData.ListNews.Item";
            _typeNameTable[11] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[12] = "Blend.SampleData.SampleDataSource1.SampleDataSource1";
            _typeNameTable[13] = "Blend.SampleData.SampleDataSource1.GroupCollection";
            _typeNameTable[14] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource1.Group>";
            _typeNameTable[15] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource1.Group>";
            _typeNameTable[16] = "Blend.SampleData.SampleDataSource1.Group";
            _typeNameTable[17] = "Blend.SampleData.SampleDataSource1.ItemCollection";
            _typeNameTable[18] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource1.Item>";
            _typeNameTable[19] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource1.Item>";
            _typeNameTable[20] = "Blend.SampleData.SampleDataSource1.Item";
            _typeNameTable[21] = "Blend.SampleData.SampleDataSource2.SampleDataSource2";
            _typeNameTable[22] = "Blend.SampleData.SampleDataSource2.GroupCollection";
            _typeNameTable[23] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource2.Group>";
            _typeNameTable[24] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource2.Group>";
            _typeNameTable[25] = "Blend.SampleData.SampleDataSource2.Group";
            _typeNameTable[26] = "Blend.SampleData.SampleDataSource2.ItemCollection";
            _typeNameTable[27] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource2.Item>";
            _typeNameTable[28] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource2.Item>";
            _typeNameTable[29] = "Blend.SampleData.SampleDataSource2.Item";
            _typeNameTable[30] = "Blend.SampleData.SampleDataSource3.SampleDataSource3";
            _typeNameTable[31] = "Blend.SampleData.SampleDataSource3.GroupCollection";
            _typeNameTable[32] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource3.Group>";
            _typeNameTable[33] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource3.Group>";
            _typeNameTable[34] = "Blend.SampleData.SampleDataSource3.Group";
            _typeNameTable[35] = "Blend.SampleData.SampleDataSource4.SampleDataSource4";
            _typeNameTable[36] = "Blend.SampleData.SampleDataSource4.GroupCollection";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource4.Group>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource4.Group>";
            _typeNameTable[39] = "Blend.SampleData.SampleDataSource4.Group";
            _typeNameTable[40] = "Blend.SampleData.SampleDataSource4.ItemCollection";
            _typeNameTable[41] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource4.Item>";
            _typeNameTable[42] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource4.Item>";
            _typeNameTable[43] = "Blend.SampleData.SampleDataSource4.Item";
            _typeNameTable[44] = "Blend.SampleData.SampleDataSource5.SampleDataSource5";
            _typeNameTable[45] = "Blend.SampleData.SampleDataSource5.GroupCollection";
            _typeNameTable[46] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource5.Group>";
            _typeNameTable[47] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource5.Group>";
            _typeNameTable[48] = "Blend.SampleData.SampleDataSource5.Group";
            _typeNameTable[49] = "Blend.SampleData.SampleDataSource5.ItemCollection";
            _typeNameTable[50] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource5.Item>";
            _typeNameTable[51] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource5.Item>";
            _typeNameTable[52] = "Blend.SampleData.SampleDataSource5.Item";
            _typeNameTable[53] = "Blend.SampleData.SampleDataSource6.SampleDataSource6";
            _typeNameTable[54] = "Blend.SampleData.SampleDataSource6.GroupCollection";
            _typeNameTable[55] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource6.Group>";
            _typeNameTable[56] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource6.Group>";
            _typeNameTable[57] = "Blend.SampleData.SampleDataSource6.Group";
            _typeNameTable[58] = "Blend.SampleData.SampleDataSource6.ItemCollection";
            _typeNameTable[59] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource6.Item>";
            _typeNameTable[60] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource6.Item>";
            _typeNameTable[61] = "Blend.SampleData.SampleDataSource6.Item";
            _typeNameTable[62] = "Blend.SampleData.SampleDataSource7.SampleDataSource7";
            _typeNameTable[63] = "Blend.SampleData.SampleDataSource7.GroupCollection";
            _typeNameTable[64] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource7.Group>";
            _typeNameTable[65] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource7.Group>";
            _typeNameTable[66] = "Blend.SampleData.SampleDataSource7.Group";
            _typeNameTable[67] = "Blend.SampleData.SampleDataSource7.ItemCollection";
            _typeNameTable[68] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource7.Item>";
            _typeNameTable[69] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource7.Item>";
            _typeNameTable[70] = "Blend.SampleData.SampleDataSource7.Item";
            _typeNameTable[71] = "Blend.SampleData.SampleDataSource8.SampleDataSource8";
            _typeNameTable[72] = "Blend.SampleData.SampleDataSource8.GroupCollection";
            _typeNameTable[73] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource8.Group>";
            _typeNameTable[74] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource8.Group>";
            _typeNameTable[75] = "Blend.SampleData.SampleDataSource8.Group";
            _typeNameTable[76] = "Blend.SampleData.SampleDataSource8.ItemCollection";
            _typeNameTable[77] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource8.Item>";
            _typeNameTable[78] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource8.Item>";
            _typeNameTable[79] = "Blend.SampleData.SampleDataSource8.Item";
            _typeNameTable[80] = "Blend.SampleData.SampleDataSource9.SampleDataSource9";
            _typeNameTable[81] = "Blend.SampleData.SampleDataSource9.GroupCollection";
            _typeNameTable[82] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource9.Group>";
            _typeNameTable[83] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource9.Group>";
            _typeNameTable[84] = "Blend.SampleData.SampleDataSource9.Group";
            _typeNameTable[85] = "Blend.SampleData.SampleDataSource9.ItemCollection";
            _typeNameTable[86] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource9.Item>";
            _typeNameTable[87] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource9.Item>";
            _typeNameTable[88] = "Blend.SampleData.SampleDataSource9.Item";
            _typeNameTable[89] = "Blend.SampleData.SampleDataSource.SampleDataSource";
            _typeNameTable[90] = "Blend.SampleData.SampleDataSource.GroupCollection";
            _typeNameTable[91] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Group>";
            _typeNameTable[92] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Group>";
            _typeNameTable[93] = "Blend.SampleData.SampleDataSource.Group";
            _typeNameTable[94] = "Blend.SampleData.SampleDataSource.ItemCollection";
            _typeNameTable[95] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Item>";
            _typeNameTable[96] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Item>";
            _typeNameTable[97] = "Blend.SampleData.SampleDataSource.Item";
            _typeNameTable[98] = "SoonZik.music_player";
            _typeNameTable[99] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[100] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[101] = "SoonZik.battle";
            _typeNameTable[102] = "SoonZik.Community";
            _typeNameTable[103] = "SoonZik.Concert";
            _typeNameTable[104] = "Facebook.Client.Controls.LoginButton";
            _typeNameTable[105] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[106] = "Facebook.Client.Controls.Audience";
            _typeNameTable[107] = "System.Enum";
            _typeNameTable[108] = "System.ValueType";
            _typeNameTable[109] = "Facebook.Client.FacebookLoginBehavior";
            _typeNameTable[110] = "Boolean";
            _typeNameTable[111] = "Facebook.Client.GraphUser";
            _typeNameTable[112] = "Facebook.Client.GraphObject";
            _typeNameTable[113] = "Windows.UI.Xaml.CornerRadius";
            _typeNameTable[114] = "SoonZik.Connection";
            _typeNameTable[115] = "SoonZik.follow";
            _typeNameTable[116] = "SoonZik.Home";
            _typeNameTable[117] = "SoonZik.News";
            _typeNameTable[118] = "SoonZik.Shop";

            _typeTable = new global::System.Type[119];
            _typeTable[0] = typeof(global::Blend.SampleData.ListNews.ListNews);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::Blend.SampleData.ListNews.GroupCollection);
            _typeTable[3] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.ListNews.Group>);
            _typeTable[4] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.ListNews.Group>);
            _typeTable[5] = typeof(global::Blend.SampleData.ListNews.Group);
            _typeTable[6] = typeof(global::System.String);
            _typeTable[7] = typeof(global::Blend.SampleData.ListNews.ItemCollection);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.ListNews.Item>);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.ListNews.Item>);
            _typeTable[10] = typeof(global::Blend.SampleData.ListNews.Item);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[12] = typeof(global::Blend.SampleData.SampleDataSource1.SampleDataSource1);
            _typeTable[13] = typeof(global::Blend.SampleData.SampleDataSource1.GroupCollection);
            _typeTable[14] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource1.Group>);
            _typeTable[15] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource1.Group>);
            _typeTable[16] = typeof(global::Blend.SampleData.SampleDataSource1.Group);
            _typeTable[17] = typeof(global::Blend.SampleData.SampleDataSource1.ItemCollection);
            _typeTable[18] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource1.Item>);
            _typeTable[19] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource1.Item>);
            _typeTable[20] = typeof(global::Blend.SampleData.SampleDataSource1.Item);
            _typeTable[21] = typeof(global::Blend.SampleData.SampleDataSource2.SampleDataSource2);
            _typeTable[22] = typeof(global::Blend.SampleData.SampleDataSource2.GroupCollection);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource2.Group>);
            _typeTable[24] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource2.Group>);
            _typeTable[25] = typeof(global::Blend.SampleData.SampleDataSource2.Group);
            _typeTable[26] = typeof(global::Blend.SampleData.SampleDataSource2.ItemCollection);
            _typeTable[27] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource2.Item>);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource2.Item>);
            _typeTable[29] = typeof(global::Blend.SampleData.SampleDataSource2.Item);
            _typeTable[30] = typeof(global::Blend.SampleData.SampleDataSource3.SampleDataSource3);
            _typeTable[31] = typeof(global::Blend.SampleData.SampleDataSource3.GroupCollection);
            _typeTable[32] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource3.Group>);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource3.Group>);
            _typeTable[34] = typeof(global::Blend.SampleData.SampleDataSource3.Group);
            _typeTable[35] = typeof(global::Blend.SampleData.SampleDataSource4.SampleDataSource4);
            _typeTable[36] = typeof(global::Blend.SampleData.SampleDataSource4.GroupCollection);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource4.Group>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource4.Group>);
            _typeTable[39] = typeof(global::Blend.SampleData.SampleDataSource4.Group);
            _typeTable[40] = typeof(global::Blend.SampleData.SampleDataSource4.ItemCollection);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource4.Item>);
            _typeTable[42] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource4.Item>);
            _typeTable[43] = typeof(global::Blend.SampleData.SampleDataSource4.Item);
            _typeTable[44] = typeof(global::Blend.SampleData.SampleDataSource5.SampleDataSource5);
            _typeTable[45] = typeof(global::Blend.SampleData.SampleDataSource5.GroupCollection);
            _typeTable[46] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource5.Group>);
            _typeTable[47] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource5.Group>);
            _typeTable[48] = typeof(global::Blend.SampleData.SampleDataSource5.Group);
            _typeTable[49] = typeof(global::Blend.SampleData.SampleDataSource5.ItemCollection);
            _typeTable[50] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource5.Item>);
            _typeTable[51] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource5.Item>);
            _typeTable[52] = typeof(global::Blend.SampleData.SampleDataSource5.Item);
            _typeTable[53] = typeof(global::Blend.SampleData.SampleDataSource6.SampleDataSource6);
            _typeTable[54] = typeof(global::Blend.SampleData.SampleDataSource6.GroupCollection);
            _typeTable[55] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource6.Group>);
            _typeTable[56] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource6.Group>);
            _typeTable[57] = typeof(global::Blend.SampleData.SampleDataSource6.Group);
            _typeTable[58] = typeof(global::Blend.SampleData.SampleDataSource6.ItemCollection);
            _typeTable[59] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource6.Item>);
            _typeTable[60] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource6.Item>);
            _typeTable[61] = typeof(global::Blend.SampleData.SampleDataSource6.Item);
            _typeTable[62] = typeof(global::Blend.SampleData.SampleDataSource7.SampleDataSource7);
            _typeTable[63] = typeof(global::Blend.SampleData.SampleDataSource7.GroupCollection);
            _typeTable[64] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource7.Group>);
            _typeTable[65] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource7.Group>);
            _typeTable[66] = typeof(global::Blend.SampleData.SampleDataSource7.Group);
            _typeTable[67] = typeof(global::Blend.SampleData.SampleDataSource7.ItemCollection);
            _typeTable[68] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource7.Item>);
            _typeTable[69] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource7.Item>);
            _typeTable[70] = typeof(global::Blend.SampleData.SampleDataSource7.Item);
            _typeTable[71] = typeof(global::Blend.SampleData.SampleDataSource8.SampleDataSource8);
            _typeTable[72] = typeof(global::Blend.SampleData.SampleDataSource8.GroupCollection);
            _typeTable[73] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource8.Group>);
            _typeTable[74] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource8.Group>);
            _typeTable[75] = typeof(global::Blend.SampleData.SampleDataSource8.Group);
            _typeTable[76] = typeof(global::Blend.SampleData.SampleDataSource8.ItemCollection);
            _typeTable[77] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource8.Item>);
            _typeTable[78] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource8.Item>);
            _typeTable[79] = typeof(global::Blend.SampleData.SampleDataSource8.Item);
            _typeTable[80] = typeof(global::Blend.SampleData.SampleDataSource9.SampleDataSource9);
            _typeTable[81] = typeof(global::Blend.SampleData.SampleDataSource9.GroupCollection);
            _typeTable[82] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource9.Group>);
            _typeTable[83] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource9.Group>);
            _typeTable[84] = typeof(global::Blend.SampleData.SampleDataSource9.Group);
            _typeTable[85] = typeof(global::Blend.SampleData.SampleDataSource9.ItemCollection);
            _typeTable[86] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource9.Item>);
            _typeTable[87] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource9.Item>);
            _typeTable[88] = typeof(global::Blend.SampleData.SampleDataSource9.Item);
            _typeTable[89] = typeof(global::Blend.SampleData.SampleDataSource.SampleDataSource);
            _typeTable[90] = typeof(global::Blend.SampleData.SampleDataSource.GroupCollection);
            _typeTable[91] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Group>);
            _typeTable[92] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Group>);
            _typeTable[93] = typeof(global::Blend.SampleData.SampleDataSource.Group);
            _typeTable[94] = typeof(global::Blend.SampleData.SampleDataSource.ItemCollection);
            _typeTable[95] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Item>);
            _typeTable[96] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Item>);
            _typeTable[97] = typeof(global::Blend.SampleData.SampleDataSource.Item);
            _typeTable[98] = typeof(global::SoonZik.music_player);
            _typeTable[99] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[100] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[101] = typeof(global::SoonZik.battle);
            _typeTable[102] = typeof(global::SoonZik.Community);
            _typeTable[103] = typeof(global::SoonZik.Concert);
            _typeTable[104] = typeof(global::Facebook.Client.Controls.LoginButton);
            _typeTable[105] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[106] = typeof(global::Facebook.Client.Controls.Audience);
            _typeTable[107] = typeof(global::System.Enum);
            _typeTable[108] = typeof(global::System.ValueType);
            _typeTable[109] = typeof(global::Facebook.Client.FacebookLoginBehavior);
            _typeTable[110] = typeof(global::System.Boolean);
            _typeTable[111] = typeof(global::Facebook.Client.GraphUser);
            _typeTable[112] = typeof(global::Facebook.Client.GraphObject);
            _typeTable[113] = typeof(global::Windows.UI.Xaml.CornerRadius);
            _typeTable[114] = typeof(global::SoonZik.Connection);
            _typeTable[115] = typeof(global::SoonZik.follow);
            _typeTable[116] = typeof(global::SoonZik.Home);
            _typeTable[117] = typeof(global::SoonZik.News);
            _typeTable[118] = typeof(global::SoonZik.Shop);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ListNews() { return new global::Blend.SampleData.ListNews.ListNews(); }
        private object Activate_2_GroupCollection() { return new global::Blend.SampleData.ListNews.GroupCollection(); }
        private object Activate_3_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.ListNews.Group>(); }
        private object Activate_4_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.ListNews.Group>(); }
        private object Activate_5_Group() { return new global::Blend.SampleData.ListNews.Group(); }
        private object Activate_7_ItemCollection() { return new global::Blend.SampleData.ListNews.ItemCollection(); }
        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.ListNews.Item>(); }
        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.ListNews.Item>(); }
        private object Activate_10_Item() { return new global::Blend.SampleData.ListNews.Item(); }
        private object Activate_12_SampleDataSource1() { return new global::Blend.SampleData.SampleDataSource1.SampleDataSource1(); }
        private object Activate_13_GroupCollection() { return new global::Blend.SampleData.SampleDataSource1.GroupCollection(); }
        private object Activate_14_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource1.Group>(); }
        private object Activate_15_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource1.Group>(); }
        private object Activate_16_Group() { return new global::Blend.SampleData.SampleDataSource1.Group(); }
        private object Activate_17_ItemCollection() { return new global::Blend.SampleData.SampleDataSource1.ItemCollection(); }
        private object Activate_18_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource1.Item>(); }
        private object Activate_19_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource1.Item>(); }
        private object Activate_20_Item() { return new global::Blend.SampleData.SampleDataSource1.Item(); }
        private object Activate_21_SampleDataSource2() { return new global::Blend.SampleData.SampleDataSource2.SampleDataSource2(); }
        private object Activate_22_GroupCollection() { return new global::Blend.SampleData.SampleDataSource2.GroupCollection(); }
        private object Activate_23_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource2.Group>(); }
        private object Activate_24_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource2.Group>(); }
        private object Activate_25_Group() { return new global::Blend.SampleData.SampleDataSource2.Group(); }
        private object Activate_26_ItemCollection() { return new global::Blend.SampleData.SampleDataSource2.ItemCollection(); }
        private object Activate_27_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource2.Item>(); }
        private object Activate_28_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource2.Item>(); }
        private object Activate_29_Item() { return new global::Blend.SampleData.SampleDataSource2.Item(); }
        private object Activate_30_SampleDataSource3() { return new global::Blend.SampleData.SampleDataSource3.SampleDataSource3(); }
        private object Activate_31_GroupCollection() { return new global::Blend.SampleData.SampleDataSource3.GroupCollection(); }
        private object Activate_32_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource3.Group>(); }
        private object Activate_33_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource3.Group>(); }
        private object Activate_34_Group() { return new global::Blend.SampleData.SampleDataSource3.Group(); }
        private object Activate_35_SampleDataSource4() { return new global::Blend.SampleData.SampleDataSource4.SampleDataSource4(); }
        private object Activate_36_GroupCollection() { return new global::Blend.SampleData.SampleDataSource4.GroupCollection(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource4.Group>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource4.Group>(); }
        private object Activate_39_Group() { return new global::Blend.SampleData.SampleDataSource4.Group(); }
        private object Activate_40_ItemCollection() { return new global::Blend.SampleData.SampleDataSource4.ItemCollection(); }
        private object Activate_41_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource4.Item>(); }
        private object Activate_42_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource4.Item>(); }
        private object Activate_43_Item() { return new global::Blend.SampleData.SampleDataSource4.Item(); }
        private object Activate_44_SampleDataSource5() { return new global::Blend.SampleData.SampleDataSource5.SampleDataSource5(); }
        private object Activate_45_GroupCollection() { return new global::Blend.SampleData.SampleDataSource5.GroupCollection(); }
        private object Activate_46_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource5.Group>(); }
        private object Activate_47_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource5.Group>(); }
        private object Activate_48_Group() { return new global::Blend.SampleData.SampleDataSource5.Group(); }
        private object Activate_49_ItemCollection() { return new global::Blend.SampleData.SampleDataSource5.ItemCollection(); }
        private object Activate_50_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource5.Item>(); }
        private object Activate_51_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource5.Item>(); }
        private object Activate_52_Item() { return new global::Blend.SampleData.SampleDataSource5.Item(); }
        private object Activate_53_SampleDataSource6() { return new global::Blend.SampleData.SampleDataSource6.SampleDataSource6(); }
        private object Activate_54_GroupCollection() { return new global::Blend.SampleData.SampleDataSource6.GroupCollection(); }
        private object Activate_55_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource6.Group>(); }
        private object Activate_56_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource6.Group>(); }
        private object Activate_57_Group() { return new global::Blend.SampleData.SampleDataSource6.Group(); }
        private object Activate_58_ItemCollection() { return new global::Blend.SampleData.SampleDataSource6.ItemCollection(); }
        private object Activate_59_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource6.Item>(); }
        private object Activate_60_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource6.Item>(); }
        private object Activate_61_Item() { return new global::Blend.SampleData.SampleDataSource6.Item(); }
        private object Activate_62_SampleDataSource7() { return new global::Blend.SampleData.SampleDataSource7.SampleDataSource7(); }
        private object Activate_63_GroupCollection() { return new global::Blend.SampleData.SampleDataSource7.GroupCollection(); }
        private object Activate_64_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource7.Group>(); }
        private object Activate_65_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource7.Group>(); }
        private object Activate_66_Group() { return new global::Blend.SampleData.SampleDataSource7.Group(); }
        private object Activate_67_ItemCollection() { return new global::Blend.SampleData.SampleDataSource7.ItemCollection(); }
        private object Activate_68_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource7.Item>(); }
        private object Activate_69_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource7.Item>(); }
        private object Activate_70_Item() { return new global::Blend.SampleData.SampleDataSource7.Item(); }
        private object Activate_71_SampleDataSource8() { return new global::Blend.SampleData.SampleDataSource8.SampleDataSource8(); }
        private object Activate_72_GroupCollection() { return new global::Blend.SampleData.SampleDataSource8.GroupCollection(); }
        private object Activate_73_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource8.Group>(); }
        private object Activate_74_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource8.Group>(); }
        private object Activate_75_Group() { return new global::Blend.SampleData.SampleDataSource8.Group(); }
        private object Activate_76_ItemCollection() { return new global::Blend.SampleData.SampleDataSource8.ItemCollection(); }
        private object Activate_77_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource8.Item>(); }
        private object Activate_78_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource8.Item>(); }
        private object Activate_79_Item() { return new global::Blend.SampleData.SampleDataSource8.Item(); }
        private object Activate_80_SampleDataSource9() { return new global::Blend.SampleData.SampleDataSource9.SampleDataSource9(); }
        private object Activate_81_GroupCollection() { return new global::Blend.SampleData.SampleDataSource9.GroupCollection(); }
        private object Activate_82_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource9.Group>(); }
        private object Activate_83_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource9.Group>(); }
        private object Activate_84_Group() { return new global::Blend.SampleData.SampleDataSource9.Group(); }
        private object Activate_85_ItemCollection() { return new global::Blend.SampleData.SampleDataSource9.ItemCollection(); }
        private object Activate_86_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource9.Item>(); }
        private object Activate_87_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource9.Item>(); }
        private object Activate_88_Item() { return new global::Blend.SampleData.SampleDataSource9.Item(); }
        private object Activate_89_SampleDataSource() { return new global::Blend.SampleData.SampleDataSource.SampleDataSource(); }
        private object Activate_90_GroupCollection() { return new global::Blend.SampleData.SampleDataSource.GroupCollection(); }
        private object Activate_91_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Group>(); }
        private object Activate_92_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Group>(); }
        private object Activate_93_Group() { return new global::Blend.SampleData.SampleDataSource.Group(); }
        private object Activate_94_ItemCollection() { return new global::Blend.SampleData.SampleDataSource.ItemCollection(); }
        private object Activate_95_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Item>(); }
        private object Activate_96_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Item>(); }
        private object Activate_97_Item() { return new global::Blend.SampleData.SampleDataSource.Item(); }
        private object Activate_98_music_player() { return new global::SoonZik.music_player(); }
        private object Activate_101_battle() { return new global::SoonZik.battle(); }
        private object Activate_102_Community() { return new global::SoonZik.Community(); }
        private object Activate_103_Concert() { return new global::SoonZik.Concert(); }
        private object Activate_104_LoginButton() { return new global::Facebook.Client.Controls.LoginButton(); }
        private object Activate_111_GraphUser() { return new global::Facebook.Client.GraphUser(); }
        private object Activate_112_GraphObject() { return new global::Facebook.Client.GraphObject(); }
        private object Activate_114_Connection() { return new global::SoonZik.Connection(); }
        private object Activate_115_follow() { return new global::SoonZik.follow(); }
        private object Activate_116_Home() { return new global::SoonZik.Home(); }
        private object Activate_117_News() { return new global::SoonZik.News(); }
        private object Activate_118_Shop() { return new global::SoonZik.Shop(); }
        private void VectorAdd_2_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.ListNews.Group>)instance;
            var newItem = (global::Blend.SampleData.ListNews.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_3_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.ListNews.Group>)instance;
            var newItem = (global::Blend.SampleData.ListNews.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_4_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.ListNews.Group>)instance;
            var newItem = (global::Blend.SampleData.ListNews.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_7_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.ListNews.Item>)instance;
            var newItem = (global::Blend.SampleData.ListNews.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.ListNews.Item>)instance;
            var newItem = (global::Blend.SampleData.ListNews.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.ListNews.Item>)instance;
            var newItem = (global::Blend.SampleData.ListNews.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_13_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource1.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource1.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_14_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource1.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource1.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_15_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource1.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource1.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_17_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource1.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource1.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource1.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource1.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_19_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource1.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource1.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource2.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource2.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_23_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource2.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource2.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_24_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource2.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource2.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_26_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource2.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource2.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource2.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource2.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource2.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource2.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_31_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource3.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource3.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_32_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource3.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource3.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource3.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource3.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource4.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource4.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource4.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource4.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource4.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource4.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource4.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource4.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource4.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource4.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource4.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource4.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_45_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource5.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource5.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource5.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource5.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource5.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource5.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_49_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource5.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource5.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource5.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource5.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_51_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource5.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource5.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_54_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource6.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource6.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_55_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource6.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource6.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource6.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource6.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_58_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource6.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource6.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource6.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource6.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource6.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource6.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_63_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource7.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource7.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource7.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource7.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource7.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource7.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_67_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource7.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource7.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_68_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource7.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource7.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_69_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource7.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource7.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_72_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource8.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource8.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_73_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource8.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource8.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_74_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource8.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource8.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_76_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource8.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource8.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_77_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource8.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource8.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_78_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource8.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource8.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_81_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource9.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource9.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_82_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource9.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource9.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_83_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource9.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource9.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_85_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource9.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource9.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_86_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource9.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource9.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_87_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource9.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource9.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_90_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_91_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_92_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_94_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_95_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_96_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Item)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Blend.SampleData.ListNews.ListNews
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ListNews;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Blend.SampleData.ListNews.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.ListNews.Group>"));
                userType.CollectionAdd = VectorAdd_2_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.ListNews.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.ListNews.Group>"));
                userType.Activator = Activate_3_ObservableCollection;
                userType.CollectionAdd = VectorAdd_3_ObservableCollection;
                xamlType = userType;
                break;

            case 4:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.ListNews.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_Collection;
                userType.CollectionAdd = VectorAdd_4_Collection;
                xamlType = userType;
                break;

            case 5:   //  Blend.SampleData.ListNews.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  String
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Blend.SampleData.ListNews.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.ListNews.Item>"));
                userType.CollectionAdd = VectorAdd_7_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.ListNews.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.ListNews.Item>"));
                userType.Activator = Activate_8_ObservableCollection;
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.ListNews.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case 10:   //  Blend.SampleData.ListNews.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Blend.SampleData.SampleDataSource1.SampleDataSource1
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_SampleDataSource1;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Blend.SampleData.SampleDataSource1.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource1.Group>"));
                userType.CollectionAdd = VectorAdd_13_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource1.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource1.Group>"));
                userType.Activator = Activate_14_ObservableCollection;
                userType.CollectionAdd = VectorAdd_14_ObservableCollection;
                xamlType = userType;
                break;

            case 15:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource1.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_15_Collection;
                userType.CollectionAdd = VectorAdd_15_Collection;
                xamlType = userType;
                break;

            case 16:   //  Blend.SampleData.SampleDataSource1.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  Blend.SampleData.SampleDataSource1.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource1.Item>"));
                userType.CollectionAdd = VectorAdd_17_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource1.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource1.Item>"));
                userType.Activator = Activate_18_ObservableCollection;
                userType.CollectionAdd = VectorAdd_18_ObservableCollection;
                xamlType = userType;
                break;

            case 19:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource1.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_Collection;
                userType.CollectionAdd = VectorAdd_19_Collection;
                xamlType = userType;
                break;

            case 20:   //  Blend.SampleData.SampleDataSource1.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Blend.SampleData.SampleDataSource2.SampleDataSource2
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_SampleDataSource2;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  Blend.SampleData.SampleDataSource2.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource2.Group>"));
                userType.CollectionAdd = VectorAdd_22_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource2.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource2.Group>"));
                userType.Activator = Activate_23_ObservableCollection;
                userType.CollectionAdd = VectorAdd_23_ObservableCollection;
                xamlType = userType;
                break;

            case 24:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource2.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_Collection;
                userType.CollectionAdd = VectorAdd_24_Collection;
                xamlType = userType;
                break;

            case 25:   //  Blend.SampleData.SampleDataSource2.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  Blend.SampleData.SampleDataSource2.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource2.Item>"));
                userType.CollectionAdd = VectorAdd_26_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource2.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource2.Item>"));
                userType.Activator = Activate_27_ObservableCollection;
                userType.CollectionAdd = VectorAdd_27_ObservableCollection;
                xamlType = userType;
                break;

            case 28:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource2.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_28_Collection;
                userType.CollectionAdd = VectorAdd_28_Collection;
                xamlType = userType;
                break;

            case 29:   //  Blend.SampleData.SampleDataSource2.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  Blend.SampleData.SampleDataSource3.SampleDataSource3
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_SampleDataSource3;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  Blend.SampleData.SampleDataSource3.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource3.Group>"));
                userType.CollectionAdd = VectorAdd_31_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource3.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource3.Group>"));
                userType.Activator = Activate_32_ObservableCollection;
                userType.CollectionAdd = VectorAdd_32_ObservableCollection;
                xamlType = userType;
                break;

            case 33:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource3.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_Collection;
                userType.CollectionAdd = VectorAdd_33_Collection;
                xamlType = userType;
                break;

            case 34:   //  Blend.SampleData.SampleDataSource3.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Blend.SampleData.SampleDataSource4.SampleDataSource4
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_SampleDataSource4;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  Blend.SampleData.SampleDataSource4.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource4.Group>"));
                userType.CollectionAdd = VectorAdd_36_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource4.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource4.Group>"));
                userType.Activator = Activate_37_ObservableCollection;
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource4.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  Blend.SampleData.SampleDataSource4.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Blend.SampleData.SampleDataSource4.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource4.Item>"));
                userType.CollectionAdd = VectorAdd_40_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource4.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource4.Item>"));
                userType.Activator = Activate_41_ObservableCollection;
                userType.CollectionAdd = VectorAdd_41_ObservableCollection;
                xamlType = userType;
                break;

            case 42:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource4.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_Collection;
                userType.CollectionAdd = VectorAdd_42_Collection;
                xamlType = userType;
                break;

            case 43:   //  Blend.SampleData.SampleDataSource4.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_43_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  Blend.SampleData.SampleDataSource5.SampleDataSource5
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_44_SampleDataSource5;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  Blend.SampleData.SampleDataSource5.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource5.Group>"));
                userType.CollectionAdd = VectorAdd_45_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource5.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource5.Group>"));
                userType.Activator = Activate_46_ObservableCollection;
                userType.CollectionAdd = VectorAdd_46_ObservableCollection;
                xamlType = userType;
                break;

            case 47:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource5.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_47_Collection;
                userType.CollectionAdd = VectorAdd_47_Collection;
                xamlType = userType;
                break;

            case 48:   //  Blend.SampleData.SampleDataSource5.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Blend.SampleData.SampleDataSource5.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource5.Item>"));
                userType.CollectionAdd = VectorAdd_49_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource5.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource5.Item>"));
                userType.Activator = Activate_50_ObservableCollection;
                userType.CollectionAdd = VectorAdd_50_ObservableCollection;
                xamlType = userType;
                break;

            case 51:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource5.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_Collection;
                userType.CollectionAdd = VectorAdd_51_Collection;
                xamlType = userType;
                break;

            case 52:   //  Blend.SampleData.SampleDataSource5.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_52_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  Blend.SampleData.SampleDataSource6.SampleDataSource6
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_53_SampleDataSource6;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  Blend.SampleData.SampleDataSource6.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource6.Group>"));
                userType.CollectionAdd = VectorAdd_54_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource6.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource6.Group>"));
                userType.Activator = Activate_55_ObservableCollection;
                userType.CollectionAdd = VectorAdd_55_ObservableCollection;
                xamlType = userType;
                break;

            case 56:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource6.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_56_Collection;
                userType.CollectionAdd = VectorAdd_56_Collection;
                xamlType = userType;
                break;

            case 57:   //  Blend.SampleData.SampleDataSource6.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_57_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  Blend.SampleData.SampleDataSource6.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource6.Item>"));
                userType.CollectionAdd = VectorAdd_58_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource6.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource6.Item>"));
                userType.Activator = Activate_59_ObservableCollection;
                userType.CollectionAdd = VectorAdd_59_ObservableCollection;
                xamlType = userType;
                break;

            case 60:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource6.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_60_Collection;
                userType.CollectionAdd = VectorAdd_60_Collection;
                xamlType = userType;
                break;

            case 61:   //  Blend.SampleData.SampleDataSource6.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_61_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 62:   //  Blend.SampleData.SampleDataSource7.SampleDataSource7
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_62_SampleDataSource7;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  Blend.SampleData.SampleDataSource7.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource7.Group>"));
                userType.CollectionAdd = VectorAdd_63_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 64:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource7.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource7.Group>"));
                userType.Activator = Activate_64_ObservableCollection;
                userType.CollectionAdd = VectorAdd_64_ObservableCollection;
                xamlType = userType;
                break;

            case 65:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource7.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_65_Collection;
                userType.CollectionAdd = VectorAdd_65_Collection;
                xamlType = userType;
                break;

            case 66:   //  Blend.SampleData.SampleDataSource7.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_66_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  Blend.SampleData.SampleDataSource7.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource7.Item>"));
                userType.CollectionAdd = VectorAdd_67_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource7.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource7.Item>"));
                userType.Activator = Activate_68_ObservableCollection;
                userType.CollectionAdd = VectorAdd_68_ObservableCollection;
                xamlType = userType;
                break;

            case 69:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource7.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_69_Collection;
                userType.CollectionAdd = VectorAdd_69_Collection;
                xamlType = userType;
                break;

            case 70:   //  Blend.SampleData.SampleDataSource7.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_70_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 71:   //  Blend.SampleData.SampleDataSource8.SampleDataSource8
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_71_SampleDataSource8;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 72:   //  Blend.SampleData.SampleDataSource8.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource8.Group>"));
                userType.CollectionAdd = VectorAdd_72_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource8.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource8.Group>"));
                userType.Activator = Activate_73_ObservableCollection;
                userType.CollectionAdd = VectorAdd_73_ObservableCollection;
                xamlType = userType;
                break;

            case 74:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource8.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_74_Collection;
                userType.CollectionAdd = VectorAdd_74_Collection;
                xamlType = userType;
                break;

            case 75:   //  Blend.SampleData.SampleDataSource8.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_75_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  Blend.SampleData.SampleDataSource8.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource8.Item>"));
                userType.CollectionAdd = VectorAdd_76_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource8.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource8.Item>"));
                userType.Activator = Activate_77_ObservableCollection;
                userType.CollectionAdd = VectorAdd_77_ObservableCollection;
                xamlType = userType;
                break;

            case 78:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource8.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_78_Collection;
                userType.CollectionAdd = VectorAdd_78_Collection;
                xamlType = userType;
                break;

            case 79:   //  Blend.SampleData.SampleDataSource8.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_79_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 80:   //  Blend.SampleData.SampleDataSource9.SampleDataSource9
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_80_SampleDataSource9;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 81:   //  Blend.SampleData.SampleDataSource9.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource9.Group>"));
                userType.CollectionAdd = VectorAdd_81_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 82:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource9.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource9.Group>"));
                userType.Activator = Activate_82_ObservableCollection;
                userType.CollectionAdd = VectorAdd_82_ObservableCollection;
                xamlType = userType;
                break;

            case 83:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource9.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_83_Collection;
                userType.CollectionAdd = VectorAdd_83_Collection;
                xamlType = userType;
                break;

            case 84:   //  Blend.SampleData.SampleDataSource9.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_84_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  Blend.SampleData.SampleDataSource9.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource9.Item>"));
                userType.CollectionAdd = VectorAdd_85_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource9.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource9.Item>"));
                userType.Activator = Activate_86_ObservableCollection;
                userType.CollectionAdd = VectorAdd_86_ObservableCollection;
                xamlType = userType;
                break;

            case 87:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource9.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_87_Collection;
                userType.CollectionAdd = VectorAdd_87_Collection;
                xamlType = userType;
                break;

            case 88:   //  Blend.SampleData.SampleDataSource9.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_88_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  Blend.SampleData.SampleDataSource.SampleDataSource
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_89_SampleDataSource;
                userType.AddMemberName("Groups");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 90:   //  Blend.SampleData.SampleDataSource.GroupCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Group>"));
                userType.CollectionAdd = VectorAdd_90_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Group>"));
                userType.Activator = Activate_91_ObservableCollection;
                userType.CollectionAdd = VectorAdd_91_ObservableCollection;
                xamlType = userType;
                break;

            case 92:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Group>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_92_Collection;
                userType.CollectionAdd = VectorAdd_92_Collection;
                xamlType = userType;
                break;

            case 93:   //  Blend.SampleData.SampleDataSource.Group
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_93_Group;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.AddMemberName("Items");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  Blend.SampleData.SampleDataSource.ItemCollection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Item>"));
                userType.CollectionAdd = VectorAdd_94_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Item>"));
                userType.Activator = Activate_95_ObservableCollection;
                userType.CollectionAdd = VectorAdd_95_ObservableCollection;
                xamlType = userType;
                break;

            case 96:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Item>
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_96_Collection;
                userType.CollectionAdd = VectorAdd_96_Collection;
                xamlType = userType;
                break;

            case 97:   //  Blend.SampleData.SampleDataSource.Item
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_97_Item;
                userType.AddMemberName("Property1");
                userType.AddMemberName("Property2");
                userType.AddMemberName("Property3");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 98:   //  SoonZik.music_player
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_98_music_player;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 100:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 101:   //  SoonZik.battle
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_101_battle;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 102:   //  SoonZik.Community
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_102_Community;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  SoonZik.Concert
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_103_Concert;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 104:   //  Facebook.Client.Controls.LoginButton
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_104_LoginButton;
                userType.AddMemberName("DefaultAudience");
                userType.AddMemberName("Permissions");
                userType.AddMemberName("LoginBehavior");
                userType.AddMemberName("FetchUserInfo");
                userType.AddMemberName("CurrentUser");
                userType.AddMemberName("CornerRadius");
                xamlType = userType;
                break;

            case 105:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 106:   //  Facebook.Client.Controls.Audience
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Facebook.Client.Controls.Audience.None);
                userType.AddEnumValue("OnlyMe", global::Facebook.Client.Controls.Audience.OnlyMe);
                userType.AddEnumValue("Friends", global::Facebook.Client.Controls.Audience.Friends);
                userType.AddEnumValue("Everyone", global::Facebook.Client.Controls.Audience.Everyone);
                xamlType = userType;
                break;

            case 107:   //  System.Enum
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 108:   //  System.ValueType
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 109:   //  Facebook.Client.FacebookLoginBehavior
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("LoginBehaviorApplicationOnly", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorApplicationOnly);
                userType.AddEnumValue("LoginBehaviorMobileInternetExplorerOnly", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorMobileInternetExplorerOnly);
                userType.AddEnumValue("LoginBehaviorWebViewOnly", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorWebViewOnly);
                userType.AddEnumValue("LoginBehaviorAppwithMobileInternetFallback", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorAppwithMobileInternetFallback);
                userType.AddEnumValue("LoginBehaviorWebAuthenticationBroker", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorWebAuthenticationBroker);
                xamlType = userType;
                break;

            case 110:   //  Boolean
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 111:   //  Facebook.Client.GraphUser
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Facebook.Client.GraphObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 112:   //  Facebook.Client.GraphObject
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_112_GraphObject;
                xamlType = userType;
                break;

            case 113:   //  Windows.UI.Xaml.CornerRadius
                xamlType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 114:   //  SoonZik.Connection
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_114_Connection;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 115:   //  SoonZik.follow
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_115_follow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 116:   //  SoonZik.Home
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_116_Home;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 117:   //  SoonZik.News
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_117_News;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 118:   //  SoonZik.Shop
                userType = new global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_118_Shop;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Facebook.Client.Facebook_Client_Universal_Windows_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_ListNews_Groups(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.ListNews)instance;
            return that.Groups;
        }
        private object get_1_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            return that.Property1;
        }
        private void set_1_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_2_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            return that.Property2;
        }
        private void set_2_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_3_Group_Property3(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            return that.Property3;
        }
        private void set_3_Group_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            that.Property3 = (global::System.String)Value;
        }
        private object get_4_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Group)instance;
            return that.Items;
        }
        private object get_5_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Item)instance;
            return that.Property1;
        }
        private void set_5_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.ListNews.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_6_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Item)instance;
            return that.Property2;
        }
        private void set_6_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.ListNews.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_7_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.ListNews.Item)instance;
            return that.Property3;
        }
        private void set_7_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.ListNews.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_8_SampleDataSource1_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.SampleDataSource1)instance;
            return that.Groups;
        }
        private object get_9_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Group)instance;
            return that.Property1;
        }
        private void set_9_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_10_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Group)instance;
            return that.Property2;
        }
        private void set_10_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_11_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Group)instance;
            return that.Items;
        }
        private object get_12_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Item)instance;
            return that.Property1;
        }
        private void set_12_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_13_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Item)instance;
            return that.Property2;
        }
        private void set_13_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_14_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Item)instance;
            return that.Property3;
        }
        private void set_14_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource1.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_15_SampleDataSource2_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.SampleDataSource2)instance;
            return that.Groups;
        }
        private object get_16_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            return that.Property1;
        }
        private void set_16_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_17_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            return that.Property2;
        }
        private void set_17_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_18_Group_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            return that.Property3;
        }
        private void set_18_Group_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_19_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Group)instance;
            return that.Items;
        }
        private object get_20_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Item)instance;
            return that.Property1;
        }
        private void set_20_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_21_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Item)instance;
            return that.Property2;
        }
        private void set_21_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_22_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Item)instance;
            return that.Property3;
        }
        private void set_22_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource2.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_23_SampleDataSource3_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource3.SampleDataSource3)instance;
            return that.Groups;
        }
        private object get_24_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource3.Group)instance;
            return that.Property1;
        }
        private void set_24_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource3.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_25_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource3.Group)instance;
            return that.Property2;
        }
        private void set_25_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource3.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_26_SampleDataSource4_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.SampleDataSource4)instance;
            return that.Groups;
        }
        private object get_27_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Group)instance;
            return that.Property1;
        }
        private void set_27_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_28_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Group)instance;
            return that.Property2;
        }
        private void set_28_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_29_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Group)instance;
            return that.Items;
        }
        private object get_30_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Item)instance;
            return that.Property1;
        }
        private void set_30_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_31_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Item)instance;
            return that.Property2;
        }
        private void set_31_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_32_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Item)instance;
            return that.Property3;
        }
        private void set_32_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource4.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_33_SampleDataSource5_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.SampleDataSource5)instance;
            return that.Groups;
        }
        private object get_34_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Group)instance;
            return that.Property1;
        }
        private void set_34_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_35_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Group)instance;
            return that.Property2;
        }
        private void set_35_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_36_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Group)instance;
            return that.Items;
        }
        private object get_37_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Item)instance;
            return that.Property1;
        }
        private void set_37_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_38_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Item)instance;
            return that.Property2;
        }
        private void set_38_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_39_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Item)instance;
            return that.Property3;
        }
        private void set_39_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource5.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_40_SampleDataSource6_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.SampleDataSource6)instance;
            return that.Groups;
        }
        private object get_41_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            return that.Property1;
        }
        private void set_41_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_42_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            return that.Property2;
        }
        private void set_42_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_43_Group_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            return that.Property3;
        }
        private void set_43_Group_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_44_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Group)instance;
            return that.Items;
        }
        private object get_45_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Item)instance;
            return that.Property1;
        }
        private void set_45_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_46_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Item)instance;
            return that.Property2;
        }
        private void set_46_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_47_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Item)instance;
            return that.Property3;
        }
        private void set_47_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource6.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_48_SampleDataSource7_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.SampleDataSource7)instance;
            return that.Groups;
        }
        private object get_49_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            return that.Property1;
        }
        private void set_49_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_50_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            return that.Property2;
        }
        private void set_50_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_51_Group_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            return that.Property3;
        }
        private void set_51_Group_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_52_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Group)instance;
            return that.Items;
        }
        private object get_53_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Item)instance;
            return that.Property1;
        }
        private void set_53_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_54_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Item)instance;
            return that.Property2;
        }
        private void set_54_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_55_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Item)instance;
            return that.Property3;
        }
        private void set_55_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource7.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_56_SampleDataSource8_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.SampleDataSource8)instance;
            return that.Groups;
        }
        private object get_57_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            return that.Property1;
        }
        private void set_57_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_58_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            return that.Property2;
        }
        private void set_58_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_59_Group_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            return that.Property3;
        }
        private void set_59_Group_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_60_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Group)instance;
            return that.Items;
        }
        private object get_61_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Item)instance;
            return that.Property1;
        }
        private void set_61_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_62_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Item)instance;
            return that.Property2;
        }
        private void set_62_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_63_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Item)instance;
            return that.Property3;
        }
        private void set_63_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource8.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_64_SampleDataSource9_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.SampleDataSource9)instance;
            return that.Groups;
        }
        private object get_65_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Group)instance;
            return that.Property1;
        }
        private void set_65_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_66_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Group)instance;
            return that.Property2;
        }
        private void set_66_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_67_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Group)instance;
            return that.Items;
        }
        private object get_68_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Item)instance;
            return that.Property1;
        }
        private void set_68_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_69_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Item)instance;
            return that.Property2;
        }
        private void set_69_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_70_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Item)instance;
            return that.Property3;
        }
        private void set_70_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource9.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_71_SampleDataSource_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.SampleDataSource)instance;
            return that.Groups;
        }
        private object get_72_Group_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.Property1;
        }
        private void set_72_Group_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_73_Group_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.Property2;
        }
        private void set_73_Group_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_74_Group_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.Property3;
        }
        private void set_74_Group_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_75_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.Items;
        }
        private object get_76_Item_Property1(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.Property1;
        }
        private void set_76_Item_Property1(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.Property1 = (global::System.String)Value;
        }
        private object get_77_Item_Property2(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.Property2;
        }
        private void set_77_Item_Property2(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.Property2 = (global::System.String)Value;
        }
        private object get_78_Item_Property3(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.Property3;
        }
        private void set_78_Item_Property3(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.Property3 = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_79_LoginButton_DefaultAudience(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.DefaultAudience;
        }
        private void set_79_LoginButton_DefaultAudience(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.DefaultAudience = (global::Facebook.Client.Controls.Audience)Value;
        }
        private object get_80_LoginButton_Permissions(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.Permissions;
        }
        private void set_80_LoginButton_Permissions(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.Permissions = (global::System.String)Value;
        }
        private object get_81_LoginButton_LoginBehavior(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.LoginBehavior;
        }
        private void set_81_LoginButton_LoginBehavior(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.LoginBehavior = (global::Facebook.Client.FacebookLoginBehavior)Value;
        }
        private object get_82_LoginButton_FetchUserInfo(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.FetchUserInfo;
        }
        private void set_82_LoginButton_FetchUserInfo(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.FetchUserInfo = (global::System.Boolean)Value;
        }
        private object get_83_LoginButton_CurrentUser(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.CurrentUser;
        }
        private object get_84_LoginButton_CornerRadius(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.CornerRadius;
        }
        private void set_84_LoginButton_CornerRadius(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.CornerRadius = (global::Windows.UI.Xaml.CornerRadius)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SoonZik.SoonZik_XamlTypeInfo.XamlMember xamlMember = null;
            global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Blend.SampleData.ListNews.ListNews.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.ListNews");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.ListNews.GroupCollection");
                xamlMember.Getter = get_0_ListNews_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.ListNews.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_1_Group_Property1;
                xamlMember.Setter = set_1_Group_Property1;
                break;
            case "Blend.SampleData.ListNews.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_2_Group_Property2;
                xamlMember.Setter = set_2_Group_Property2;
                break;
            case "Blend.SampleData.ListNews.Group.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "String");
                xamlMember.Getter = get_3_Group_Property3;
                xamlMember.Setter = set_3_Group_Property3;
                break;
            case "Blend.SampleData.ListNews.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.ListNews.ItemCollection");
                xamlMember.Getter = get_4_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.ListNews.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_5_Item_Property1;
                xamlMember.Setter = set_5_Item_Property1;
                break;
            case "Blend.SampleData.ListNews.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_6_Item_Property2;
                xamlMember.Setter = set_6_Item_Property2;
                break;
            case "Blend.SampleData.ListNews.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.ListNews.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_7_Item_Property3;
                xamlMember.Setter = set_7_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource1.SampleDataSource1.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.SampleDataSource1");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource1.GroupCollection");
                xamlMember.Getter = get_8_SampleDataSource1_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource1.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_9_Group_Property1;
                xamlMember.Setter = set_9_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource1.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_10_Group_Property2;
                xamlMember.Setter = set_10_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource1.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource1.ItemCollection");
                xamlMember.Getter = get_11_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource1.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_12_Item_Property1;
                xamlMember.Setter = set_12_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource1.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_13_Item_Property2;
                xamlMember.Setter = set_13_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource1.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource1.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_14_Item_Property3;
                xamlMember.Setter = set_14_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource2.SampleDataSource2.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.SampleDataSource2");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource2.GroupCollection");
                xamlMember.Getter = get_15_SampleDataSource2_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource2.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_16_Group_Property1;
                xamlMember.Setter = set_16_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource2.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_17_Group_Property2;
                xamlMember.Setter = set_17_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource2.Group.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_18_Group_Property3;
                xamlMember.Setter = set_18_Group_Property3;
                break;
            case "Blend.SampleData.SampleDataSource2.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource2.ItemCollection");
                xamlMember.Getter = get_19_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource2.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_20_Item_Property1;
                xamlMember.Setter = set_20_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource2.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_21_Item_Property2;
                xamlMember.Setter = set_21_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource2.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource2.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_22_Item_Property3;
                xamlMember.Setter = set_22_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource3.SampleDataSource3.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource3.SampleDataSource3");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource3.GroupCollection");
                xamlMember.Getter = get_23_SampleDataSource3_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource3.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource3.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_24_Group_Property1;
                xamlMember.Setter = set_24_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource3.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource3.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_25_Group_Property2;
                xamlMember.Setter = set_25_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource4.SampleDataSource4.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.SampleDataSource4");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource4.GroupCollection");
                xamlMember.Getter = get_26_SampleDataSource4_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource4.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_27_Group_Property1;
                xamlMember.Setter = set_27_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource4.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_28_Group_Property2;
                xamlMember.Setter = set_28_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource4.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource4.ItemCollection");
                xamlMember.Getter = get_29_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource4.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_30_Item_Property1;
                xamlMember.Setter = set_30_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource4.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_31_Item_Property2;
                xamlMember.Setter = set_31_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource4.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource4.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_32_Item_Property3;
                xamlMember.Setter = set_32_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource5.SampleDataSource5.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.SampleDataSource5");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource5.GroupCollection");
                xamlMember.Getter = get_33_SampleDataSource5_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource5.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_34_Group_Property1;
                xamlMember.Setter = set_34_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource5.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_35_Group_Property2;
                xamlMember.Setter = set_35_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource5.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource5.ItemCollection");
                xamlMember.Getter = get_36_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource5.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_37_Item_Property1;
                xamlMember.Setter = set_37_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource5.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_38_Item_Property2;
                xamlMember.Setter = set_38_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource5.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource5.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_39_Item_Property3;
                xamlMember.Setter = set_39_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource6.SampleDataSource6.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.SampleDataSource6");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource6.GroupCollection");
                xamlMember.Getter = get_40_SampleDataSource6_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource6.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_41_Group_Property1;
                xamlMember.Setter = set_41_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource6.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_42_Group_Property2;
                xamlMember.Setter = set_42_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource6.Group.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_43_Group_Property3;
                xamlMember.Setter = set_43_Group_Property3;
                break;
            case "Blend.SampleData.SampleDataSource6.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource6.ItemCollection");
                xamlMember.Getter = get_44_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource6.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_45_Item_Property1;
                xamlMember.Setter = set_45_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource6.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_46_Item_Property2;
                xamlMember.Setter = set_46_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource6.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource6.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_47_Item_Property3;
                xamlMember.Setter = set_47_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource7.SampleDataSource7.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.SampleDataSource7");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource7.GroupCollection");
                xamlMember.Getter = get_48_SampleDataSource7_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource7.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_49_Group_Property1;
                xamlMember.Setter = set_49_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource7.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_50_Group_Property2;
                xamlMember.Setter = set_50_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource7.Group.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_51_Group_Property3;
                xamlMember.Setter = set_51_Group_Property3;
                break;
            case "Blend.SampleData.SampleDataSource7.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource7.ItemCollection");
                xamlMember.Getter = get_52_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource7.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_53_Item_Property1;
                xamlMember.Setter = set_53_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource7.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_54_Item_Property2;
                xamlMember.Setter = set_54_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource7.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource7.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_55_Item_Property3;
                xamlMember.Setter = set_55_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource8.SampleDataSource8.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.SampleDataSource8");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource8.GroupCollection");
                xamlMember.Getter = get_56_SampleDataSource8_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource8.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_57_Group_Property1;
                xamlMember.Setter = set_57_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource8.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_58_Group_Property2;
                xamlMember.Setter = set_58_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource8.Group.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_59_Group_Property3;
                xamlMember.Setter = set_59_Group_Property3;
                break;
            case "Blend.SampleData.SampleDataSource8.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource8.ItemCollection");
                xamlMember.Getter = get_60_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource8.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_61_Item_Property1;
                xamlMember.Setter = set_61_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource8.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_62_Item_Property2;
                xamlMember.Setter = set_62_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource8.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource8.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_63_Item_Property3;
                xamlMember.Setter = set_63_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource9.SampleDataSource9.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.SampleDataSource9");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource9.GroupCollection");
                xamlMember.Getter = get_64_SampleDataSource9_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource9.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_65_Group_Property1;
                xamlMember.Setter = set_65_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource9.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_66_Group_Property2;
                xamlMember.Setter = set_66_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource9.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource9.ItemCollection");
                xamlMember.Getter = get_67_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource9.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_68_Item_Property1;
                xamlMember.Setter = set_68_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource9.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_69_Item_Property2;
                xamlMember.Setter = set_69_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource9.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource9.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_70_Item_Property3;
                xamlMember.Setter = set_70_Item_Property3;
                break;
            case "Blend.SampleData.SampleDataSource.SampleDataSource.Groups":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.SampleDataSource");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource.GroupCollection");
                xamlMember.Getter = get_71_SampleDataSource_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource.Group.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_72_Group_Property1;
                xamlMember.Setter = set_72_Group_Property1;
                break;
            case "Blend.SampleData.SampleDataSource.Group.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_73_Group_Property2;
                xamlMember.Setter = set_73_Group_Property2;
                break;
            case "Blend.SampleData.SampleDataSource.Group.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_74_Group_Property3;
                xamlMember.Setter = set_74_Group_Property3;
                break;
            case "Blend.SampleData.SampleDataSource.Group.Items":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource.ItemCollection");
                xamlMember.Getter = get_75_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource.Item.Property1":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property1", "String");
                xamlMember.Getter = get_76_Item_Property1;
                xamlMember.Setter = set_76_Item_Property1;
                break;
            case "Blend.SampleData.SampleDataSource.Item.Property2":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property2", "String");
                xamlMember.Getter = get_77_Item_Property2;
                xamlMember.Setter = set_77_Item_Property2;
                break;
            case "Blend.SampleData.SampleDataSource.Item.Property3":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Property3", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_78_Item_Property3;
                xamlMember.Setter = set_78_Item_Property3;
                break;
            case "Facebook.Client.Controls.LoginButton.DefaultAudience":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "DefaultAudience", "Facebook.Client.Controls.Audience");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_LoginButton_DefaultAudience;
                xamlMember.Setter = set_79_LoginButton_DefaultAudience;
                break;
            case "Facebook.Client.Controls.LoginButton.Permissions":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "Permissions", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_LoginButton_Permissions;
                xamlMember.Setter = set_80_LoginButton_Permissions;
                break;
            case "Facebook.Client.Controls.LoginButton.LoginBehavior":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "LoginBehavior", "Facebook.Client.FacebookLoginBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_LoginButton_LoginBehavior;
                xamlMember.Setter = set_81_LoginButton_LoginBehavior;
                break;
            case "Facebook.Client.Controls.LoginButton.FetchUserInfo":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "FetchUserInfo", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_LoginButton_FetchUserInfo;
                xamlMember.Setter = set_82_LoginButton_FetchUserInfo;
                break;
            case "Facebook.Client.Controls.LoginButton.CurrentUser":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CurrentUser", "Facebook.Client.GraphUser");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_LoginButton_CurrentUser;
                xamlMember.SetIsReadOnly();
                break;
            case "Facebook.Client.Controls.LoginButton.CornerRadius":
                userType = (global::SoonZik.SoonZik_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::SoonZik.SoonZik_XamlTypeInfo.XamlMember(this, "CornerRadius", "Windows.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_LoginButton_CornerRadius;
                xamlMember.Setter = set_84_LoginButton_CornerRadius;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::SoonZik.SoonZik_XamlTypeInfo.XamlSystemBaseType
    {
        global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SoonZik.SoonZik_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


